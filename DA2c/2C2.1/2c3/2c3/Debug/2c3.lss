
2c3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000186  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000132  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000186  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001b8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009ba  00000000  00000000  00000220  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008fd  00000000  00000000  00000bda  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002d4  00000000  00000000  000014d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000050  00000000  00000000  000017ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000453  00000000  00000000  000017fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000ba  00000000  00000000  00001c4f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001d09  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  10:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  14:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  18:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  1c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  20:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  24:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  28:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  2c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  30:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  34:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  38:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  3c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  40:	0c 94 6f 00 	jmp	0xde	; 0xde <__vector_16>
  44:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  48:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  4c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  50:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  54:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  58:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  5c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  60:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  64:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  68:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  6c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  70:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  74:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  78:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  7c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  80:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  84:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  88:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  8c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  90:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  94:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  98:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  9c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  ac:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  b0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	0e 94 66 00 	call	0xcc	; 0xcc <main>
  c4:	0c 94 97 00 	jmp	0x12e	; 0x12e <_exit>

000000c8 <__bad_interrupt>:
  c8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000cc <main>:
#include <avr/io.h>
#include <avr/interrupt.h>

int main()
{
	DDRB |= (1<<3);		// PB3 set as output
  cc:	23 9a       	sbi	0x04, 3	; 4
	TCCR0A = 0x00;		// normal mode
  ce:	14 bc       	out	0x24, r1	; 36
	TCCR0B = 0X05;		// set prescaler. 1024
  d0:	85 e0       	ldi	r24, 0x05	; 5
  d2:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = (1<<TOIE0); //timer0 interrupt enabled
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	sei(); //interrupt enabled
  da:	78 94       	sei
  dc:	ff cf       	rjmp	.-2      	; 0xdc <main+0x10>

000000de <__vector_16>:
		
	}
}

ISR(TIMER0_OVF_vect)
{
  de:	1f 92       	push	r1
  e0:	0f 92       	push	r0
  e2:	0f b6       	in	r0, 0x3f	; 63
  e4:	0f 92       	push	r0
  e6:	11 24       	eor	r1, r1
  e8:	2f 93       	push	r18
  ea:	3f 93       	push	r19
  ec:	8f 93       	push	r24
	TCNT0 = 0;
  ee:	16 bc       	out	0x26, r1	; 38
	TCNT0 = 0;
  f0:	16 bc       	out	0x26, r1	; 38
  f2:	29 e1       	ldi	r18, 0x19	; 25
  f4:	30 e0       	ldi	r19, 0x00	; 0
	// 55% duty cycle, 412.5s
	for (int i = 0; i <= 24; i++)
	{
		while (TCNT0 != 255)
  f6:	86 b5       	in	r24, 0x26	; 38
  f8:	8f 3f       	cpi	r24, 0xFF	; 255
  fa:	e9 f7       	brne	.-6      	; 0xf6 <__vector_16+0x18>
		{
		}
		TCNT0 = 0; // reset TCNT
  fc:	16 bc       	out	0x26, r1	; 38
  fe:	21 50       	subi	r18, 0x01	; 1
 100:	31 09       	sbc	r19, r1
ISR(TIMER0_OVF_vect)
{
	TCNT0 = 0;
	TCNT0 = 0;
	// 55% duty cycle, 412.5s
	for (int i = 0; i <= 24; i++)
 102:	c9 f7       	brne	.-14     	; 0xf6 <__vector_16+0x18>
		while (TCNT0 != 255)
		{
		}
		TCNT0 = 0; // reset TCNT
	}
	PORTB &= ~(1<<3);
 104:	2b 98       	cbi	0x05, 3	; 5
	
	TCNT0 = 0;
 106:	16 bc       	out	0x26, r1	; 38
 108:	25 e1       	ldi	r18, 0x15	; 21
 10a:	30 e0       	ldi	r19, 0x00	; 0
	
	//45% duty cycle, 337.5s
	for (int j = 0; j < 21; j++)
	{
		while (TCNT0 != 255)
 10c:	86 b5       	in	r24, 0x26	; 38
 10e:	8f 3f       	cpi	r24, 0xFF	; 255
 110:	e9 f7       	brne	.-6      	; 0x10c <__vector_16+0x2e>
		{
		}
		TCNT0 = 0;
 112:	16 bc       	out	0x26, r1	; 38
 114:	21 50       	subi	r18, 0x01	; 1
 116:	31 09       	sbc	r19, r1
	PORTB &= ~(1<<3);
	
	TCNT0 = 0;
	
	//45% duty cycle, 337.5s
	for (int j = 0; j < 21; j++)
 118:	c9 f7       	brne	.-14     	; 0x10c <__vector_16+0x2e>
		while (TCNT0 != 255)
		{
		}
		TCNT0 = 0;
	}
	PORTB |= (1<<3);
 11a:	2b 9a       	sbi	0x05, 3	; 5
	TCNT0 = 0;
 11c:	16 bc       	out	0x26, r1	; 38
 11e:	8f 91       	pop	r24
 120:	3f 91       	pop	r19
 122:	2f 91       	pop	r18
 124:	0f 90       	pop	r0
 126:	0f be       	out	0x3f, r0	; 63
 128:	0f 90       	pop	r0
 12a:	1f 90       	pop	r1
 12c:	18 95       	reti

0000012e <_exit>:
 12e:	f8 94       	cli

00000130 <__stop_program>:
 130:	ff cf       	rjmp	.-2      	; 0x130 <__stop_program>
