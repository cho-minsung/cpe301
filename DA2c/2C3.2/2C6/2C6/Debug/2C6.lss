
2C6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000194  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000140  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000194  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000204  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000099f  00000000  00000000  0000022c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008f2  00000000  00000000  00000bcb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002d8  00000000  00000000  000014bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000050  00000000  00000000  00001798  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000453  00000000  00000000  000017e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000008a  00000000  00000000  00001c3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001cc5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  10:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  14:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  18:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  1c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  20:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  24:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  28:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  2c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  30:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  34:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  38:	0c 94 79 00 	jmp	0xf2	; 0xf2 <__vector_14>
  3c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  40:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  44:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  48:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  4c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  50:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  54:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  58:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  5c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  60:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  64:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  68:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  6c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  70:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  74:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  78:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  7c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  80:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  84:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  88:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  8c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  90:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  94:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  98:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  9c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  ac:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  b0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	0e 94 66 00 	call	0xcc	; 0xcc <main>
  c4:	0c 94 9e 00 	jmp	0x13c	; 0x13c <_exit>

000000c8 <__bad_interrupt>:
  c8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000cc <main>:
#include <avr/io.h>
#include <avr/interrupt.h>

int main()
{
	DDRB |= (1<<5);		// PB5 set as output
  cc:	25 9a       	sbi	0x04, 5	; 4
	PORTB |= (1<<5);
  ce:	2d 9a       	sbi	0x05, 5	; 5
	DDRC &= ~(1<<1);	// PC1 set as input
  d0:	39 98       	cbi	0x07, 1	; 7
	PORTC &= (1<<1);	// pull-up
  d2:	88 b1       	in	r24, 0x08	; 8
  d4:	82 70       	andi	r24, 0x02	; 2
  d6:	88 b9       	out	0x08, r24	; 8
	
	OCR0A = 249; //top set
  d8:	89 ef       	ldi	r24, 0xF9	; 249
  da:	87 bd       	out	0x27, r24	; 39
	TCCR0A |= (1<<WGM01); // CTC mode
  dc:	84 b5       	in	r24, 0x24	; 36
  de:	82 60       	ori	r24, 0x02	; 2
  e0:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<CS02)|(1<<CS00);		// prescaler of 1024
  e2:	85 b5       	in	r24, 0x25	; 37
  e4:	85 60       	ori	r24, 0x05	; 5
  e6:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = (1<<OCIE0A); //timer compare enabled
  e8:	82 e0       	ldi	r24, 0x02	; 2
  ea:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>

	sei(); //interrupt enabled
  ee:	78 94       	sei
  f0:	ff cf       	rjmp	.-2      	; 0xf0 <main+0x24>

000000f2 <__vector_14>:
		
	}
}

ISR(TIMER0_COMPA_vect)
{
  f2:	1f 92       	push	r1
  f4:	0f 92       	push	r0
  f6:	0f b6       	in	r0, 0x3f	; 63
  f8:	0f 92       	push	r0
  fa:	11 24       	eor	r1, r1
  fc:	2f 93       	push	r18
  fe:	8f 93       	push	r24
 100:	9f 93       	push	r25
	TCNT0 = 0; //reset TCNT
 102:	16 bc       	out	0x26, r1	; 38

		while (!(PINC & (1<<PINC1)))
 104:	31 99       	sbic	0x06, 1	; 6
 106:	12 c0       	rjmp	.+36     	; 0x12c <__vector_14+0x3a>
		{
		PORTB ^= (1<<5);
 108:	20 e2       	ldi	r18, 0x20	; 32
 10a:	85 b1       	in	r24, 0x05	; 5
 10c:	82 27       	eor	r24, r18
 10e:	85 b9       	out	0x05, r24	; 5
 110:	8b e7       	ldi	r24, 0x7B	; 123
 112:	90 e0       	ldi	r25, 0x00	; 0
		
		for (int i = 0; i <= 122; i++)
		{
			while (!(TIFR0 & (1<<OCF0A)))
 114:	a9 9b       	sbis	0x15, 1	; 21
 116:	fe cf       	rjmp	.-4      	; 0x114 <__vector_14+0x22>
			{
				//delay of 2 seconds.
			}
			TCNT0 = 0;
 118:	16 bc       	out	0x26, r1	; 38
			TIFR0 |= (1<<OCF0A);
 11a:	a9 9a       	sbi	0x15, 1	; 21
 11c:	01 97       	sbiw	r24, 0x01	; 1

		while (!(PINC & (1<<PINC1)))
		{
		PORTB ^= (1<<5);
		
		for (int i = 0; i <= 122; i++)
 11e:	d1 f7       	brne	.-12     	; 0x114 <__vector_14+0x22>
				//delay of 2 seconds.
			}
			TCNT0 = 0;
			TIFR0 |= (1<<OCF0A);
		}
		PORTB ^= (1<<5);
 120:	85 b1       	in	r24, 0x05	; 5
 122:	82 27       	eor	r24, r18
 124:	85 b9       	out	0x05, r24	; 5
		TCNT0 = 0;
 126:	16 bc       	out	0x26, r1	; 38

ISR(TIMER0_COMPA_vect)
{
	TCNT0 = 0; //reset TCNT

		while (!(PINC & (1<<PINC1)))
 128:	31 9b       	sbis	0x06, 1	; 6
 12a:	ef cf       	rjmp	.-34     	; 0x10a <__vector_14+0x18>
		}
		PORTB ^= (1<<5);
		TCNT0 = 0;
	}

}
 12c:	9f 91       	pop	r25
 12e:	8f 91       	pop	r24
 130:	2f 91       	pop	r18
 132:	0f 90       	pop	r0
 134:	0f be       	out	0x3f, r0	; 63
 136:	0f 90       	pop	r0
 138:	1f 90       	pop	r1
 13a:	18 95       	reti

0000013c <_exit>:
 13c:	f8 94       	cli

0000013e <__stop_program>:
 13e:	ff cf       	rjmp	.-2      	; 0x13e <__stop_program>
