
assignment5_3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000aa8  00000b1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000aa8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000b30  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b8c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000bcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ec6  00000000  00000000  00000c2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ad3  00000000  00000000  00001af2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000515  00000000  00000000  000025c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e0  00000000  00000000  00002adc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000057b  00000000  00000000  00002bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000530  00000000  00000000  00003137  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00003667  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
   8:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
   c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  10:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  14:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  18:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  1c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  20:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  24:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  28:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  2c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  30:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  34:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  38:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  3c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  40:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  44:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  48:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  4c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  50:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  54:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  58:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  5c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  60:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  64:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  68:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  6c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  70:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  74:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  78:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  7c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  80:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  84:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  88:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  8c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  90:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  94:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  98:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  9c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a0:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a4:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a8:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  ac:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  b0:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e8 ea       	ldi	r30, 0xA8	; 168
  c8:	fa e0       	ldi	r31, 0x0A	; 10
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a4 31       	cpi	r26, 0x14	; 20
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>
  d6:	0e 94 1c 01 	call	0x238	; 0x238 <main>
  da:	0c 94 52 05 	jmp	0xaa4	; 0xaa4 <_exit>

000000de <__bad_interrupt>:
  de:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e2 <USART_Init>:
	return 0;
}

void USART_Init()
{
	UBRR0H = UBRRH_VALUE;
  e2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = UBRRL_VALUE;
  e6:	87 e6       	ldi	r24, 0x67	; 103
  e8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); // 8-bit data
  ec:	86 e0       	ldi	r24, 0x06	; 6
  ee:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
	UCSR0B = _BV(TXEN0) | _BV(RXEN0); // Enable TX and RX
  f2:	88 e1       	ldi	r24, 0x18	; 24
  f4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
  f8:	08 95       	ret

000000fa <USART_SendString>:
}

void USART_SendString(char *data){
  fa:	cf 93       	push	r28
  fc:	df 93       	push	r29
	while ((*data != '\0')){
  fe:	fc 01       	movw	r30, r24
 100:	20 81       	ld	r18, Z
 102:	22 23       	and	r18, r18
 104:	69 f0       	breq	.+26     	; 0x120 <USART_SendString+0x26>
 106:	dc 01       	movw	r26, r24
 108:	11 96       	adiw	r26, 0x01	; 1
		while (!(UCSR0A & (1<<UDRE0)));
 10a:	e0 ec       	ldi	r30, 0xC0	; 192
 10c:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;
 10e:	c6 ec       	ldi	r28, 0xC6	; 198
 110:	d0 e0       	ldi	r29, 0x00	; 0
	UCSR0B = _BV(TXEN0) | _BV(RXEN0); // Enable TX and RX
}

void USART_SendString(char *data){
	while ((*data != '\0')){
		while (!(UCSR0A & (1<<UDRE0)));
 112:	90 81       	ld	r25, Z
 114:	95 ff       	sbrs	r25, 5
 116:	fd cf       	rjmp	.-6      	; 0x112 <USART_SendString+0x18>
		UDR0 = *data;
 118:	28 83       	st	Y, r18
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); // 8-bit data
	UCSR0B = _BV(TXEN0) | _BV(RXEN0); // Enable TX and RX
}

void USART_SendString(char *data){
	while ((*data != '\0')){
 11a:	2d 91       	ld	r18, X+
 11c:	21 11       	cpse	r18, r1
 11e:	f9 cf       	rjmp	.-14     	; 0x112 <USART_SendString+0x18>
		while (!(UCSR0A & (1<<UDRE0)));
		UDR0 = *data;
		data++;
	}
}
 120:	df 91       	pop	r29
 122:	cf 91       	pop	r28
 124:	08 95       	ret

00000126 <ds18b20_reset>:

uint8_t ds18b20_reset() {
	uint8_t i;

	//low for 480us
	DS18B20_PORT &= ~ (1<<DS18B20_DQ); //low
 126:	40 98       	cbi	0x08, 0	; 8
	DS18B20_DDR |= (1<<DS18B20_DQ); //output
 128:	38 9a       	sbi	0x07, 0	; 7
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12a:	8f e7       	ldi	r24, 0x7F	; 127
 12c:	97 e0       	ldi	r25, 0x07	; 7
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <ds18b20_reset+0x8>
 132:	00 c0       	rjmp	.+0      	; 0x134 <ds18b20_reset+0xe>
 134:	00 00       	nop
	_delay_us(480);

	//release line and wait for 60uS
	DS18B20_DDR &= ~(1<<DS18B20_DQ); //input
 136:	38 98       	cbi	0x07, 0	; 7
 138:	ef ee       	ldi	r30, 0xEF	; 239
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	31 97       	sbiw	r30, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <ds18b20_reset+0x16>
 140:	00 c0       	rjmp	.+0      	; 0x142 <ds18b20_reset+0x1c>
 142:	00 00       	nop
	_delay_us(60);

	//get value and wait 420us
	i = (DS18B20_PIN & (1<<DS18B20_DQ));
 144:	86 b1       	in	r24, 0x06	; 6
 146:	ef e8       	ldi	r30, 0x8F	; 143
 148:	f6 e0       	ldi	r31, 0x06	; 6
 14a:	31 97       	sbiw	r30, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <ds18b20_reset+0x24>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <ds18b20_reset+0x2a>
 150:	00 00       	nop
	_delay_us(420);

	//return the read value, 0=ok, 1=error
	return i;
}
 152:	81 70       	andi	r24, 0x01	; 1
 154:	08 95       	ret

00000156 <ds18b20_writebit>:

void ds18b20_writebit(uint8_t bit){
	//low for 1uS
	DS18B20_PORT &= ~ (1<<DS18B20_DQ); //low
 156:	40 98       	cbi	0x08, 0	; 8
	DS18B20_DDR |= (1<<DS18B20_DQ); //output
 158:	38 9a       	sbi	0x07, 0	; 7
 15a:	95 e0       	ldi	r25, 0x05	; 5
 15c:	9a 95       	dec	r25
 15e:	f1 f7       	brne	.-4      	; 0x15c <ds18b20_writebit+0x6>
 160:	00 00       	nop
	_delay_us(1);

	//if we want to write 1, release the line (if not will keep low)
	if(bit)
 162:	81 11       	cpse	r24, r1
	DS18B20_DDR &= ~(1<<DS18B20_DQ); //input
 164:	38 98       	cbi	0x07, 0	; 7
 166:	8f ee       	ldi	r24, 0xEF	; 239
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	01 97       	sbiw	r24, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <ds18b20_writebit+0x14>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <ds18b20_writebit+0x1a>
 170:	00 00       	nop

	//wait 60uS and release the line
	_delay_us(60);
	DS18B20_DDR &= ~(1<<DS18B20_DQ); //input
 172:	38 98       	cbi	0x07, 0	; 7
 174:	08 95       	ret

00000176 <ds18b20_readbit>:

uint8_t ds18b20_readbit(void){
	uint8_t bit=0;

	//low for 1uS
	DS18B20_PORT &= ~ (1<<DS18B20_DQ); //low
 176:	40 98       	cbi	0x08, 0	; 8
	DS18B20_DDR |= (1<<DS18B20_DQ); //output
 178:	38 9a       	sbi	0x07, 0	; 7
 17a:	85 e0       	ldi	r24, 0x05	; 5
 17c:	8a 95       	dec	r24
 17e:	f1 f7       	brne	.-4      	; 0x17c <ds18b20_readbit+0x6>
 180:	00 00       	nop
	_delay_us(1);

	//release line and wait for 14uS
	DS18B20_DDR &= ~(1<<DS18B20_DQ); //input
 182:	38 98       	cbi	0x07, 0	; 7
 184:	9a e4       	ldi	r25, 0x4A	; 74
 186:	9a 95       	dec	r25
 188:	f1 f7       	brne	.-4      	; 0x186 <ds18b20_readbit+0x10>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <ds18b20_readbit+0x16>
	_delay_us(14);

	//read the value
	if(DS18B20_PIN & (1<<DS18B20_DQ))
 18c:	86 b1       	in	r24, 0x06	; 6
 18e:	90 ef       	ldi	r25, 0xF0	; 240
 190:	9a 95       	dec	r25
 192:	f1 f7       	brne	.-4      	; 0x190 <ds18b20_readbit+0x1a>
	bit=1;

	//wait 45uS and return read value
	_delay_us(45);
	return bit;
}
 194:	81 70       	andi	r24, 0x01	; 1
 196:	08 95       	ret

00000198 <ds18b20_writebyte>:

void ds18b20_writebyte(uint8_t byte){
 198:	cf 93       	push	r28
 19a:	df 93       	push	r29
 19c:	d8 2f       	mov	r29, r24
 19e:	c8 e0       	ldi	r28, 0x08	; 8
	uint8_t i=8;
	while(i--){
		ds18b20_writebit(byte&1);
 1a0:	8d 2f       	mov	r24, r29
 1a2:	81 70       	andi	r24, 0x01	; 1
 1a4:	0e 94 ab 00 	call	0x156	; 0x156 <ds18b20_writebit>
		byte >>= 1;
 1a8:	d6 95       	lsr	r29
 1aa:	c1 50       	subi	r28, 0x01	; 1
	return bit;
}

void ds18b20_writebyte(uint8_t byte){
	uint8_t i=8;
	while(i--){
 1ac:	c9 f7       	brne	.-14     	; 0x1a0 <ds18b20_writebyte+0x8>
		ds18b20_writebit(byte&1);
		byte >>= 1;
	}
}
 1ae:	df 91       	pop	r29
 1b0:	cf 91       	pop	r28
 1b2:	08 95       	ret

000001b4 <ds18b20_readbyte>:

uint8_t ds18b20_readbyte(void){
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
 1b8:	d8 e0       	ldi	r29, 0x08	; 8
	uint8_t i=8, n=0;
 1ba:	c0 e0       	ldi	r28, 0x00	; 0
	while(i--){
		n >>= 1;
		n |= (ds18b20_readbit()<<7);
 1bc:	0e 94 bb 00 	call	0x176	; 0x176 <ds18b20_readbit>
 1c0:	20 e8       	ldi	r18, 0x80	; 128
 1c2:	82 9f       	mul	r24, r18
 1c4:	c0 01       	movw	r24, r0
 1c6:	11 24       	eor	r1, r1
 1c8:	c6 95       	lsr	r28
 1ca:	c8 2b       	or	r28, r24
 1cc:	d1 50       	subi	r29, 0x01	; 1
	}
}

uint8_t ds18b20_readbyte(void){
	uint8_t i=8, n=0;
	while(i--){
 1ce:	b1 f7       	brne	.-20     	; 0x1bc <ds18b20_readbyte+0x8>
		n >>= 1;
		n |= (ds18b20_readbit()<<7);
	}
	return n;
}
 1d0:	8c 2f       	mov	r24, r28
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	08 95       	ret

000001d8 <ds18b20_gettemp>:

double ds18b20_gettemp() {
 1d8:	cf 93       	push	r28
	uint8_t temperature_l;
	uint8_t temperature_h;
	double retd = 0;

	#if DS18B20_STOPINTERRUPTONREAD == 1
	cli();
 1da:	f8 94       	cli
	#endif

	ds18b20_reset(); //reset
 1dc:	0e 94 93 00 	call	0x126	; 0x126 <ds18b20_reset>
	ds18b20_writebyte(DS18B20_CMD_SKIPROM); //skip ROM
 1e0:	8c ec       	ldi	r24, 0xCC	; 204
 1e2:	0e 94 cc 00 	call	0x198	; 0x198 <ds18b20_writebyte>
	ds18b20_writebyte(DS18B20_CMD_CONVERTTEMP); //start temperature conversion
 1e6:	84 e4       	ldi	r24, 0x44	; 68
 1e8:	0e 94 cc 00 	call	0x198	; 0x198 <ds18b20_writebyte>

	while(!ds18b20_readbit()); //wait until conversion is complete
 1ec:	0e 94 bb 00 	call	0x176	; 0x176 <ds18b20_readbit>
 1f0:	88 23       	and	r24, r24
 1f2:	e1 f3       	breq	.-8      	; 0x1ec <ds18b20_gettemp+0x14>

	ds18b20_reset(); //reset
 1f4:	0e 94 93 00 	call	0x126	; 0x126 <ds18b20_reset>
	ds18b20_writebyte(DS18B20_CMD_SKIPROM); //skip ROM
 1f8:	8c ec       	ldi	r24, 0xCC	; 204
 1fa:	0e 94 cc 00 	call	0x198	; 0x198 <ds18b20_writebyte>
	ds18b20_writebyte(DS18B20_CMD_RSCRATCHPAD); //read scratchpad
 1fe:	8e eb       	ldi	r24, 0xBE	; 190
 200:	0e 94 cc 00 	call	0x198	; 0x198 <ds18b20_writebyte>

	//read 2 byte from scratchpad
	temperature_l = ds18b20_readbyte();
 204:	0e 94 da 00 	call	0x1b4	; 0x1b4 <ds18b20_readbyte>
 208:	c8 2f       	mov	r28, r24
	temperature_h = ds18b20_readbyte();
 20a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <ds18b20_readbyte>

	#if DS18B20_STOPINTERRUPTONREAD == 1
	sei();
 20e:	78 94       	sei
	#endif

	//convert the 12 bit value obtained
	retd = ( ( temperature_h << 8 ) + temperature_l ) * 0.0625;

	return retd;
 210:	68 2f       	mov	r22, r24
 212:	70 e0       	ldi	r23, 0x00	; 0
 214:	76 2f       	mov	r23, r22
 216:	66 27       	eor	r22, r22
 218:	6c 0f       	add	r22, r28
 21a:	71 1d       	adc	r23, r1
 21c:	07 2e       	mov	r0, r23
 21e:	00 0c       	add	r0, r0
 220:	88 0b       	sbc	r24, r24
 222:	99 0b       	sbc	r25, r25
 224:	0e 94 61 01 	call	0x2c2	; 0x2c2 <__floatsisf>
 228:	20 e0       	ldi	r18, 0x00	; 0
 22a:	30 e0       	ldi	r19, 0x00	; 0
 22c:	40 e8       	ldi	r20, 0x80	; 128
 22e:	5d e3       	ldi	r21, 0x3D	; 61
 230:	0e 94 9c 01 	call	0x338	; 0x338 <__mulsf3>
}
 234:	cf 91       	pop	r28
 236:	08 95       	ret

00000238 <main>:
uint8_t ds18b20_readbit(void);
void ds18b20_writebyte(uint8_t byte);
uint8_t ds18b20_readbyte(void);
double ds18b20_gettemp();

int main(void) {
 238:	cf 93       	push	r28
 23a:	df 93       	push	r29
 23c:	cd b7       	in	r28, 0x3d	; 61
 23e:	de b7       	in	r29, 0x3e	; 62
 240:	c4 56       	subi	r28, 0x64	; 100
 242:	d1 09       	sbc	r29, r1
 244:	0f b6       	in	r0, 0x3f	; 63
 246:	f8 94       	cli
 248:	de bf       	out	0x3e, r29	; 62
 24a:	0f be       	out	0x3f, r0	; 63
 24c:	cd bf       	out	0x3d, r28	; 61
	char printbuff[100];
	double d = 0;
	//init uart
USART_Init();
 24e:	0e 94 71 00 	call	0xe2	; 0xe2 <USART_Init>
	//init interrupt
	sei();
 252:	78 94       	sei
	while (1) {
		d = ds18b20_gettemp();
		snprintf(printbuff,sizeof(printbuff),"%f\r\n", d);
 254:	0f 2e       	mov	r0, r31
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	ef 2e       	mov	r14, r31
 25a:	f1 e0       	ldi	r31, 0x01	; 1
 25c:	ff 2e       	mov	r15, r31
 25e:	f0 2d       	mov	r31, r0
 260:	0f 2e       	mov	r0, r31
 262:	f4 e6       	ldi	r31, 0x64	; 100
 264:	df 2e       	mov	r13, r31
 266:	f0 2d       	mov	r31, r0
 268:	8e 01       	movw	r16, r28
 26a:	0f 5f       	subi	r16, 0xFF	; 255
 26c:	1f 4f       	sbci	r17, 0xFF	; 255
	//init uart
USART_Init();
	//init interrupt
	sei();
	while (1) {
		d = ds18b20_gettemp();
 26e:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <ds18b20_gettemp>
		snprintf(printbuff,sizeof(printbuff),"%f\r\n", d);
 272:	9f 93       	push	r25
 274:	8f 93       	push	r24
 276:	7f 93       	push	r23
 278:	6f 93       	push	r22
 27a:	ff 92       	push	r15
 27c:	ef 92       	push	r14
 27e:	1f 92       	push	r1
 280:	df 92       	push	r13
 282:	1f 93       	push	r17
 284:	0f 93       	push	r16
 286:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <snprintf>
		USART_SendString("Temperature: ");
 28a:	85 e0       	ldi	r24, 0x05	; 5
 28c:	91 e0       	ldi	r25, 0x01	; 1
 28e:	0e 94 7d 00 	call	0xfa	; 0xfa <USART_SendString>
		USART_SendString(printbuff);
 292:	c8 01       	movw	r24, r16
 294:	0e 94 7d 00 	call	0xfa	; 0xfa <USART_SendString>
		USART_SendString("\r\n");
 298:	82 e0       	ldi	r24, 0x02	; 2
 29a:	91 e0       	ldi	r25, 0x01	; 1
 29c:	0e 94 7d 00 	call	0xfa	; 0xfa <USART_SendString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a0:	2f ef       	ldi	r18, 0xFF	; 255
 2a2:	89 e6       	ldi	r24, 0x69	; 105
 2a4:	98 e1       	ldi	r25, 0x18	; 24
 2a6:	21 50       	subi	r18, 0x01	; 1
 2a8:	80 40       	sbci	r24, 0x00	; 0
 2aa:	90 40       	sbci	r25, 0x00	; 0
 2ac:	e1 f7       	brne	.-8      	; 0x2a6 <main+0x6e>
 2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <main+0x78>
 2b0:	00 00       	nop
 2b2:	0f b6       	in	r0, 0x3f	; 63
 2b4:	f8 94       	cli
 2b6:	de bf       	out	0x3e, r29	; 62
 2b8:	0f be       	out	0x3f, r0	; 63
 2ba:	cd bf       	out	0x3d, r28	; 61
 2bc:	d8 cf       	rjmp	.-80     	; 0x26e <main+0x36>

000002be <__floatunsisf>:
 2be:	e8 94       	clt
 2c0:	09 c0       	rjmp	.+18     	; 0x2d4 <__floatsisf+0x12>

000002c2 <__floatsisf>:
 2c2:	97 fb       	bst	r25, 7
 2c4:	3e f4       	brtc	.+14     	; 0x2d4 <__floatsisf+0x12>
 2c6:	90 95       	com	r25
 2c8:	80 95       	com	r24
 2ca:	70 95       	com	r23
 2cc:	61 95       	neg	r22
 2ce:	7f 4f       	sbci	r23, 0xFF	; 255
 2d0:	8f 4f       	sbci	r24, 0xFF	; 255
 2d2:	9f 4f       	sbci	r25, 0xFF	; 255
 2d4:	99 23       	and	r25, r25
 2d6:	a9 f0       	breq	.+42     	; 0x302 <__floatsisf+0x40>
 2d8:	f9 2f       	mov	r31, r25
 2da:	96 e9       	ldi	r25, 0x96	; 150
 2dc:	bb 27       	eor	r27, r27
 2de:	93 95       	inc	r25
 2e0:	f6 95       	lsr	r31
 2e2:	87 95       	ror	r24
 2e4:	77 95       	ror	r23
 2e6:	67 95       	ror	r22
 2e8:	b7 95       	ror	r27
 2ea:	f1 11       	cpse	r31, r1
 2ec:	f8 cf       	rjmp	.-16     	; 0x2de <__floatsisf+0x1c>
 2ee:	fa f4       	brpl	.+62     	; 0x32e <__floatsisf+0x6c>
 2f0:	bb 0f       	add	r27, r27
 2f2:	11 f4       	brne	.+4      	; 0x2f8 <__floatsisf+0x36>
 2f4:	60 ff       	sbrs	r22, 0
 2f6:	1b c0       	rjmp	.+54     	; 0x32e <__floatsisf+0x6c>
 2f8:	6f 5f       	subi	r22, 0xFF	; 255
 2fa:	7f 4f       	sbci	r23, 0xFF	; 255
 2fc:	8f 4f       	sbci	r24, 0xFF	; 255
 2fe:	9f 4f       	sbci	r25, 0xFF	; 255
 300:	16 c0       	rjmp	.+44     	; 0x32e <__floatsisf+0x6c>
 302:	88 23       	and	r24, r24
 304:	11 f0       	breq	.+4      	; 0x30a <__floatsisf+0x48>
 306:	96 e9       	ldi	r25, 0x96	; 150
 308:	11 c0       	rjmp	.+34     	; 0x32c <__floatsisf+0x6a>
 30a:	77 23       	and	r23, r23
 30c:	21 f0       	breq	.+8      	; 0x316 <__floatsisf+0x54>
 30e:	9e e8       	ldi	r25, 0x8E	; 142
 310:	87 2f       	mov	r24, r23
 312:	76 2f       	mov	r23, r22
 314:	05 c0       	rjmp	.+10     	; 0x320 <__floatsisf+0x5e>
 316:	66 23       	and	r22, r22
 318:	71 f0       	breq	.+28     	; 0x336 <__floatsisf+0x74>
 31a:	96 e8       	ldi	r25, 0x86	; 134
 31c:	86 2f       	mov	r24, r22
 31e:	70 e0       	ldi	r23, 0x00	; 0
 320:	60 e0       	ldi	r22, 0x00	; 0
 322:	2a f0       	brmi	.+10     	; 0x32e <__floatsisf+0x6c>
 324:	9a 95       	dec	r25
 326:	66 0f       	add	r22, r22
 328:	77 1f       	adc	r23, r23
 32a:	88 1f       	adc	r24, r24
 32c:	da f7       	brpl	.-10     	; 0x324 <__floatsisf+0x62>
 32e:	88 0f       	add	r24, r24
 330:	96 95       	lsr	r25
 332:	87 95       	ror	r24
 334:	97 f9       	bld	r25, 7
 336:	08 95       	ret

00000338 <__mulsf3>:
 338:	0e 94 af 01 	call	0x35e	; 0x35e <__mulsf3x>
 33c:	0c 94 20 02 	jmp	0x440	; 0x440 <__fp_round>
 340:	0e 94 12 02 	call	0x424	; 0x424 <__fp_pscA>
 344:	38 f0       	brcs	.+14     	; 0x354 <__mulsf3+0x1c>
 346:	0e 94 19 02 	call	0x432	; 0x432 <__fp_pscB>
 34a:	20 f0       	brcs	.+8      	; 0x354 <__mulsf3+0x1c>
 34c:	95 23       	and	r25, r21
 34e:	11 f0       	breq	.+4      	; 0x354 <__mulsf3+0x1c>
 350:	0c 94 09 02 	jmp	0x412	; 0x412 <__fp_inf>
 354:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__fp_nan>
 358:	11 24       	eor	r1, r1
 35a:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_szero>

0000035e <__mulsf3x>:
 35e:	0e 94 31 02 	call	0x462	; 0x462 <__fp_split3>
 362:	70 f3       	brcs	.-36     	; 0x340 <__mulsf3+0x8>

00000364 <__mulsf3_pse>:
 364:	95 9f       	mul	r25, r21
 366:	c1 f3       	breq	.-16     	; 0x358 <__mulsf3+0x20>
 368:	95 0f       	add	r25, r21
 36a:	50 e0       	ldi	r21, 0x00	; 0
 36c:	55 1f       	adc	r21, r21
 36e:	62 9f       	mul	r22, r18
 370:	f0 01       	movw	r30, r0
 372:	72 9f       	mul	r23, r18
 374:	bb 27       	eor	r27, r27
 376:	f0 0d       	add	r31, r0
 378:	b1 1d       	adc	r27, r1
 37a:	63 9f       	mul	r22, r19
 37c:	aa 27       	eor	r26, r26
 37e:	f0 0d       	add	r31, r0
 380:	b1 1d       	adc	r27, r1
 382:	aa 1f       	adc	r26, r26
 384:	64 9f       	mul	r22, r20
 386:	66 27       	eor	r22, r22
 388:	b0 0d       	add	r27, r0
 38a:	a1 1d       	adc	r26, r1
 38c:	66 1f       	adc	r22, r22
 38e:	82 9f       	mul	r24, r18
 390:	22 27       	eor	r18, r18
 392:	b0 0d       	add	r27, r0
 394:	a1 1d       	adc	r26, r1
 396:	62 1f       	adc	r22, r18
 398:	73 9f       	mul	r23, r19
 39a:	b0 0d       	add	r27, r0
 39c:	a1 1d       	adc	r26, r1
 39e:	62 1f       	adc	r22, r18
 3a0:	83 9f       	mul	r24, r19
 3a2:	a0 0d       	add	r26, r0
 3a4:	61 1d       	adc	r22, r1
 3a6:	22 1f       	adc	r18, r18
 3a8:	74 9f       	mul	r23, r20
 3aa:	33 27       	eor	r19, r19
 3ac:	a0 0d       	add	r26, r0
 3ae:	61 1d       	adc	r22, r1
 3b0:	23 1f       	adc	r18, r19
 3b2:	84 9f       	mul	r24, r20
 3b4:	60 0d       	add	r22, r0
 3b6:	21 1d       	adc	r18, r1
 3b8:	82 2f       	mov	r24, r18
 3ba:	76 2f       	mov	r23, r22
 3bc:	6a 2f       	mov	r22, r26
 3be:	11 24       	eor	r1, r1
 3c0:	9f 57       	subi	r25, 0x7F	; 127
 3c2:	50 40       	sbci	r21, 0x00	; 0
 3c4:	9a f0       	brmi	.+38     	; 0x3ec <__mulsf3_pse+0x88>
 3c6:	f1 f0       	breq	.+60     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3c8:	88 23       	and	r24, r24
 3ca:	4a f0       	brmi	.+18     	; 0x3de <__mulsf3_pse+0x7a>
 3cc:	ee 0f       	add	r30, r30
 3ce:	ff 1f       	adc	r31, r31
 3d0:	bb 1f       	adc	r27, r27
 3d2:	66 1f       	adc	r22, r22
 3d4:	77 1f       	adc	r23, r23
 3d6:	88 1f       	adc	r24, r24
 3d8:	91 50       	subi	r25, 0x01	; 1
 3da:	50 40       	sbci	r21, 0x00	; 0
 3dc:	a9 f7       	brne	.-22     	; 0x3c8 <__mulsf3_pse+0x64>
 3de:	9e 3f       	cpi	r25, 0xFE	; 254
 3e0:	51 05       	cpc	r21, r1
 3e2:	80 f0       	brcs	.+32     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3e4:	0c 94 09 02 	jmp	0x412	; 0x412 <__fp_inf>
 3e8:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_szero>
 3ec:	5f 3f       	cpi	r21, 0xFF	; 255
 3ee:	e4 f3       	brlt	.-8      	; 0x3e8 <__mulsf3_pse+0x84>
 3f0:	98 3e       	cpi	r25, 0xE8	; 232
 3f2:	d4 f3       	brlt	.-12     	; 0x3e8 <__mulsf3_pse+0x84>
 3f4:	86 95       	lsr	r24
 3f6:	77 95       	ror	r23
 3f8:	67 95       	ror	r22
 3fa:	b7 95       	ror	r27
 3fc:	f7 95       	ror	r31
 3fe:	e7 95       	ror	r30
 400:	9f 5f       	subi	r25, 0xFF	; 255
 402:	c1 f7       	brne	.-16     	; 0x3f4 <__mulsf3_pse+0x90>
 404:	fe 2b       	or	r31, r30
 406:	88 0f       	add	r24, r24
 408:	91 1d       	adc	r25, r1
 40a:	96 95       	lsr	r25
 40c:	87 95       	ror	r24
 40e:	97 f9       	bld	r25, 7
 410:	08 95       	ret

00000412 <__fp_inf>:
 412:	97 f9       	bld	r25, 7
 414:	9f 67       	ori	r25, 0x7F	; 127
 416:	80 e8       	ldi	r24, 0x80	; 128
 418:	70 e0       	ldi	r23, 0x00	; 0
 41a:	60 e0       	ldi	r22, 0x00	; 0
 41c:	08 95       	ret

0000041e <__fp_nan>:
 41e:	9f ef       	ldi	r25, 0xFF	; 255
 420:	80 ec       	ldi	r24, 0xC0	; 192
 422:	08 95       	ret

00000424 <__fp_pscA>:
 424:	00 24       	eor	r0, r0
 426:	0a 94       	dec	r0
 428:	16 16       	cp	r1, r22
 42a:	17 06       	cpc	r1, r23
 42c:	18 06       	cpc	r1, r24
 42e:	09 06       	cpc	r0, r25
 430:	08 95       	ret

00000432 <__fp_pscB>:
 432:	00 24       	eor	r0, r0
 434:	0a 94       	dec	r0
 436:	12 16       	cp	r1, r18
 438:	13 06       	cpc	r1, r19
 43a:	14 06       	cpc	r1, r20
 43c:	05 06       	cpc	r0, r21
 43e:	08 95       	ret

00000440 <__fp_round>:
 440:	09 2e       	mov	r0, r25
 442:	03 94       	inc	r0
 444:	00 0c       	add	r0, r0
 446:	11 f4       	brne	.+4      	; 0x44c <__fp_round+0xc>
 448:	88 23       	and	r24, r24
 44a:	52 f0       	brmi	.+20     	; 0x460 <__fp_round+0x20>
 44c:	bb 0f       	add	r27, r27
 44e:	40 f4       	brcc	.+16     	; 0x460 <__fp_round+0x20>
 450:	bf 2b       	or	r27, r31
 452:	11 f4       	brne	.+4      	; 0x458 <__fp_round+0x18>
 454:	60 ff       	sbrs	r22, 0
 456:	04 c0       	rjmp	.+8      	; 0x460 <__fp_round+0x20>
 458:	6f 5f       	subi	r22, 0xFF	; 255
 45a:	7f 4f       	sbci	r23, 0xFF	; 255
 45c:	8f 4f       	sbci	r24, 0xFF	; 255
 45e:	9f 4f       	sbci	r25, 0xFF	; 255
 460:	08 95       	ret

00000462 <__fp_split3>:
 462:	57 fd       	sbrc	r21, 7
 464:	90 58       	subi	r25, 0x80	; 128
 466:	44 0f       	add	r20, r20
 468:	55 1f       	adc	r21, r21
 46a:	59 f0       	breq	.+22     	; 0x482 <__fp_splitA+0x10>
 46c:	5f 3f       	cpi	r21, 0xFF	; 255
 46e:	71 f0       	breq	.+28     	; 0x48c <__fp_splitA+0x1a>
 470:	47 95       	ror	r20

00000472 <__fp_splitA>:
 472:	88 0f       	add	r24, r24
 474:	97 fb       	bst	r25, 7
 476:	99 1f       	adc	r25, r25
 478:	61 f0       	breq	.+24     	; 0x492 <__fp_splitA+0x20>
 47a:	9f 3f       	cpi	r25, 0xFF	; 255
 47c:	79 f0       	breq	.+30     	; 0x49c <__fp_splitA+0x2a>
 47e:	87 95       	ror	r24
 480:	08 95       	ret
 482:	12 16       	cp	r1, r18
 484:	13 06       	cpc	r1, r19
 486:	14 06       	cpc	r1, r20
 488:	55 1f       	adc	r21, r21
 48a:	f2 cf       	rjmp	.-28     	; 0x470 <__fp_split3+0xe>
 48c:	46 95       	lsr	r20
 48e:	f1 df       	rcall	.-30     	; 0x472 <__fp_splitA>
 490:	08 c0       	rjmp	.+16     	; 0x4a2 <__fp_splitA+0x30>
 492:	16 16       	cp	r1, r22
 494:	17 06       	cpc	r1, r23
 496:	18 06       	cpc	r1, r24
 498:	99 1f       	adc	r25, r25
 49a:	f1 cf       	rjmp	.-30     	; 0x47e <__fp_splitA+0xc>
 49c:	86 95       	lsr	r24
 49e:	71 05       	cpc	r23, r1
 4a0:	61 05       	cpc	r22, r1
 4a2:	08 94       	sec
 4a4:	08 95       	ret

000004a6 <__fp_zero>:
 4a6:	e8 94       	clt

000004a8 <__fp_szero>:
 4a8:	bb 27       	eor	r27, r27
 4aa:	66 27       	eor	r22, r22
 4ac:	77 27       	eor	r23, r23
 4ae:	cb 01       	movw	r24, r22
 4b0:	97 f9       	bld	r25, 7
 4b2:	08 95       	ret

000004b4 <snprintf>:
 4b4:	ae e0       	ldi	r26, 0x0E	; 14
 4b6:	b0 e0       	ldi	r27, 0x00	; 0
 4b8:	e0 e6       	ldi	r30, 0x60	; 96
 4ba:	f2 e0       	ldi	r31, 0x02	; 2
 4bc:	0c 94 29 05 	jmp	0xa52	; 0xa52 <__prologue_saves__+0x1c>
 4c0:	0d 89       	ldd	r16, Y+21	; 0x15
 4c2:	1e 89       	ldd	r17, Y+22	; 0x16
 4c4:	8f 89       	ldd	r24, Y+23	; 0x17
 4c6:	98 8d       	ldd	r25, Y+24	; 0x18
 4c8:	26 e0       	ldi	r18, 0x06	; 6
 4ca:	2c 83       	std	Y+4, r18	; 0x04
 4cc:	1a 83       	std	Y+2, r17	; 0x02
 4ce:	09 83       	std	Y+1, r16	; 0x01
 4d0:	97 ff       	sbrs	r25, 7
 4d2:	02 c0       	rjmp	.+4      	; 0x4d8 <snprintf+0x24>
 4d4:	80 e0       	ldi	r24, 0x00	; 0
 4d6:	90 e8       	ldi	r25, 0x80	; 128
 4d8:	01 97       	sbiw	r24, 0x01	; 1
 4da:	9e 83       	std	Y+6, r25	; 0x06
 4dc:	8d 83       	std	Y+5, r24	; 0x05
 4de:	ae 01       	movw	r20, r28
 4e0:	45 5e       	subi	r20, 0xE5	; 229
 4e2:	5f 4f       	sbci	r21, 0xFF	; 255
 4e4:	69 8d       	ldd	r22, Y+25	; 0x19
 4e6:	7a 8d       	ldd	r23, Y+26	; 0x1a
 4e8:	ce 01       	movw	r24, r28
 4ea:	01 96       	adiw	r24, 0x01	; 1
 4ec:	0e 94 8a 02 	call	0x514	; 0x514 <vfprintf>
 4f0:	4d 81       	ldd	r20, Y+5	; 0x05
 4f2:	5e 81       	ldd	r21, Y+6	; 0x06
 4f4:	57 fd       	sbrc	r21, 7
 4f6:	0a c0       	rjmp	.+20     	; 0x50c <snprintf+0x58>
 4f8:	2f 81       	ldd	r18, Y+7	; 0x07
 4fa:	38 85       	ldd	r19, Y+8	; 0x08
 4fc:	42 17       	cp	r20, r18
 4fe:	53 07       	cpc	r21, r19
 500:	0c f4       	brge	.+2      	; 0x504 <snprintf+0x50>
 502:	9a 01       	movw	r18, r20
 504:	f8 01       	movw	r30, r16
 506:	e2 0f       	add	r30, r18
 508:	f3 1f       	adc	r31, r19
 50a:	10 82       	st	Z, r1
 50c:	2e 96       	adiw	r28, 0x0e	; 14
 50e:	e4 e0       	ldi	r30, 0x04	; 4
 510:	0c 94 45 05 	jmp	0xa8a	; 0xa8a <__epilogue_restores__+0x1c>

00000514 <vfprintf>:
 514:	ab e0       	ldi	r26, 0x0B	; 11
 516:	b0 e0       	ldi	r27, 0x00	; 0
 518:	e0 e9       	ldi	r30, 0x90	; 144
 51a:	f2 e0       	ldi	r31, 0x02	; 2
 51c:	0c 94 1b 05 	jmp	0xa36	; 0xa36 <__prologue_saves__>
 520:	6c 01       	movw	r12, r24
 522:	7b 01       	movw	r14, r22
 524:	8a 01       	movw	r16, r20
 526:	fc 01       	movw	r30, r24
 528:	17 82       	std	Z+7, r1	; 0x07
 52a:	16 82       	std	Z+6, r1	; 0x06
 52c:	83 81       	ldd	r24, Z+3	; 0x03
 52e:	81 ff       	sbrs	r24, 1
 530:	cc c1       	rjmp	.+920    	; 0x8ca <vfprintf+0x3b6>
 532:	ce 01       	movw	r24, r28
 534:	01 96       	adiw	r24, 0x01	; 1
 536:	3c 01       	movw	r6, r24
 538:	f6 01       	movw	r30, r12
 53a:	93 81       	ldd	r25, Z+3	; 0x03
 53c:	f7 01       	movw	r30, r14
 53e:	93 fd       	sbrc	r25, 3
 540:	85 91       	lpm	r24, Z+
 542:	93 ff       	sbrs	r25, 3
 544:	81 91       	ld	r24, Z+
 546:	7f 01       	movw	r14, r30
 548:	88 23       	and	r24, r24
 54a:	09 f4       	brne	.+2      	; 0x54e <vfprintf+0x3a>
 54c:	ba c1       	rjmp	.+884    	; 0x8c2 <vfprintf+0x3ae>
 54e:	85 32       	cpi	r24, 0x25	; 37
 550:	39 f4       	brne	.+14     	; 0x560 <vfprintf+0x4c>
 552:	93 fd       	sbrc	r25, 3
 554:	85 91       	lpm	r24, Z+
 556:	93 ff       	sbrs	r25, 3
 558:	81 91       	ld	r24, Z+
 55a:	7f 01       	movw	r14, r30
 55c:	85 32       	cpi	r24, 0x25	; 37
 55e:	29 f4       	brne	.+10     	; 0x56a <vfprintf+0x56>
 560:	b6 01       	movw	r22, r12
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 568:	e7 cf       	rjmp	.-50     	; 0x538 <vfprintf+0x24>
 56a:	91 2c       	mov	r9, r1
 56c:	21 2c       	mov	r2, r1
 56e:	31 2c       	mov	r3, r1
 570:	ff e1       	ldi	r31, 0x1F	; 31
 572:	f3 15       	cp	r31, r3
 574:	d8 f0       	brcs	.+54     	; 0x5ac <vfprintf+0x98>
 576:	8b 32       	cpi	r24, 0x2B	; 43
 578:	79 f0       	breq	.+30     	; 0x598 <vfprintf+0x84>
 57a:	38 f4       	brcc	.+14     	; 0x58a <vfprintf+0x76>
 57c:	80 32       	cpi	r24, 0x20	; 32
 57e:	79 f0       	breq	.+30     	; 0x59e <vfprintf+0x8a>
 580:	83 32       	cpi	r24, 0x23	; 35
 582:	a1 f4       	brne	.+40     	; 0x5ac <vfprintf+0x98>
 584:	23 2d       	mov	r18, r3
 586:	20 61       	ori	r18, 0x10	; 16
 588:	1d c0       	rjmp	.+58     	; 0x5c4 <vfprintf+0xb0>
 58a:	8d 32       	cpi	r24, 0x2D	; 45
 58c:	61 f0       	breq	.+24     	; 0x5a6 <vfprintf+0x92>
 58e:	80 33       	cpi	r24, 0x30	; 48
 590:	69 f4       	brne	.+26     	; 0x5ac <vfprintf+0x98>
 592:	23 2d       	mov	r18, r3
 594:	21 60       	ori	r18, 0x01	; 1
 596:	16 c0       	rjmp	.+44     	; 0x5c4 <vfprintf+0xb0>
 598:	83 2d       	mov	r24, r3
 59a:	82 60       	ori	r24, 0x02	; 2
 59c:	38 2e       	mov	r3, r24
 59e:	e3 2d       	mov	r30, r3
 5a0:	e4 60       	ori	r30, 0x04	; 4
 5a2:	3e 2e       	mov	r3, r30
 5a4:	2a c0       	rjmp	.+84     	; 0x5fa <vfprintf+0xe6>
 5a6:	f3 2d       	mov	r31, r3
 5a8:	f8 60       	ori	r31, 0x08	; 8
 5aa:	1d c0       	rjmp	.+58     	; 0x5e6 <vfprintf+0xd2>
 5ac:	37 fc       	sbrc	r3, 7
 5ae:	2d c0       	rjmp	.+90     	; 0x60a <vfprintf+0xf6>
 5b0:	20 ed       	ldi	r18, 0xD0	; 208
 5b2:	28 0f       	add	r18, r24
 5b4:	2a 30       	cpi	r18, 0x0A	; 10
 5b6:	40 f0       	brcs	.+16     	; 0x5c8 <vfprintf+0xb4>
 5b8:	8e 32       	cpi	r24, 0x2E	; 46
 5ba:	b9 f4       	brne	.+46     	; 0x5ea <vfprintf+0xd6>
 5bc:	36 fc       	sbrc	r3, 6
 5be:	81 c1       	rjmp	.+770    	; 0x8c2 <vfprintf+0x3ae>
 5c0:	23 2d       	mov	r18, r3
 5c2:	20 64       	ori	r18, 0x40	; 64
 5c4:	32 2e       	mov	r3, r18
 5c6:	19 c0       	rjmp	.+50     	; 0x5fa <vfprintf+0xe6>
 5c8:	36 fe       	sbrs	r3, 6
 5ca:	06 c0       	rjmp	.+12     	; 0x5d8 <vfprintf+0xc4>
 5cc:	8a e0       	ldi	r24, 0x0A	; 10
 5ce:	98 9e       	mul	r9, r24
 5d0:	20 0d       	add	r18, r0
 5d2:	11 24       	eor	r1, r1
 5d4:	92 2e       	mov	r9, r18
 5d6:	11 c0       	rjmp	.+34     	; 0x5fa <vfprintf+0xe6>
 5d8:	ea e0       	ldi	r30, 0x0A	; 10
 5da:	2e 9e       	mul	r2, r30
 5dc:	20 0d       	add	r18, r0
 5de:	11 24       	eor	r1, r1
 5e0:	22 2e       	mov	r2, r18
 5e2:	f3 2d       	mov	r31, r3
 5e4:	f0 62       	ori	r31, 0x20	; 32
 5e6:	3f 2e       	mov	r3, r31
 5e8:	08 c0       	rjmp	.+16     	; 0x5fa <vfprintf+0xe6>
 5ea:	8c 36       	cpi	r24, 0x6C	; 108
 5ec:	21 f4       	brne	.+8      	; 0x5f6 <vfprintf+0xe2>
 5ee:	83 2d       	mov	r24, r3
 5f0:	80 68       	ori	r24, 0x80	; 128
 5f2:	38 2e       	mov	r3, r24
 5f4:	02 c0       	rjmp	.+4      	; 0x5fa <vfprintf+0xe6>
 5f6:	88 36       	cpi	r24, 0x68	; 104
 5f8:	41 f4       	brne	.+16     	; 0x60a <vfprintf+0xf6>
 5fa:	f7 01       	movw	r30, r14
 5fc:	93 fd       	sbrc	r25, 3
 5fe:	85 91       	lpm	r24, Z+
 600:	93 ff       	sbrs	r25, 3
 602:	81 91       	ld	r24, Z+
 604:	7f 01       	movw	r14, r30
 606:	81 11       	cpse	r24, r1
 608:	b3 cf       	rjmp	.-154    	; 0x570 <vfprintf+0x5c>
 60a:	98 2f       	mov	r25, r24
 60c:	9f 7d       	andi	r25, 0xDF	; 223
 60e:	95 54       	subi	r25, 0x45	; 69
 610:	93 30       	cpi	r25, 0x03	; 3
 612:	28 f4       	brcc	.+10     	; 0x61e <vfprintf+0x10a>
 614:	0c 5f       	subi	r16, 0xFC	; 252
 616:	1f 4f       	sbci	r17, 0xFF	; 255
 618:	9f e3       	ldi	r25, 0x3F	; 63
 61a:	99 83       	std	Y+1, r25	; 0x01
 61c:	0d c0       	rjmp	.+26     	; 0x638 <vfprintf+0x124>
 61e:	83 36       	cpi	r24, 0x63	; 99
 620:	31 f0       	breq	.+12     	; 0x62e <vfprintf+0x11a>
 622:	83 37       	cpi	r24, 0x73	; 115
 624:	71 f0       	breq	.+28     	; 0x642 <vfprintf+0x12e>
 626:	83 35       	cpi	r24, 0x53	; 83
 628:	09 f0       	breq	.+2      	; 0x62c <vfprintf+0x118>
 62a:	59 c0       	rjmp	.+178    	; 0x6de <vfprintf+0x1ca>
 62c:	21 c0       	rjmp	.+66     	; 0x670 <vfprintf+0x15c>
 62e:	f8 01       	movw	r30, r16
 630:	80 81       	ld	r24, Z
 632:	89 83       	std	Y+1, r24	; 0x01
 634:	0e 5f       	subi	r16, 0xFE	; 254
 636:	1f 4f       	sbci	r17, 0xFF	; 255
 638:	88 24       	eor	r8, r8
 63a:	83 94       	inc	r8
 63c:	91 2c       	mov	r9, r1
 63e:	53 01       	movw	r10, r6
 640:	13 c0       	rjmp	.+38     	; 0x668 <vfprintf+0x154>
 642:	28 01       	movw	r4, r16
 644:	f2 e0       	ldi	r31, 0x02	; 2
 646:	4f 0e       	add	r4, r31
 648:	51 1c       	adc	r5, r1
 64a:	f8 01       	movw	r30, r16
 64c:	a0 80       	ld	r10, Z
 64e:	b1 80       	ldd	r11, Z+1	; 0x01
 650:	36 fe       	sbrs	r3, 6
 652:	03 c0       	rjmp	.+6      	; 0x65a <vfprintf+0x146>
 654:	69 2d       	mov	r22, r9
 656:	70 e0       	ldi	r23, 0x00	; 0
 658:	02 c0       	rjmp	.+4      	; 0x65e <vfprintf+0x14a>
 65a:	6f ef       	ldi	r22, 0xFF	; 255
 65c:	7f ef       	ldi	r23, 0xFF	; 255
 65e:	c5 01       	movw	r24, r10
 660:	0e 94 76 04 	call	0x8ec	; 0x8ec <strnlen>
 664:	4c 01       	movw	r8, r24
 666:	82 01       	movw	r16, r4
 668:	f3 2d       	mov	r31, r3
 66a:	ff 77       	andi	r31, 0x7F	; 127
 66c:	3f 2e       	mov	r3, r31
 66e:	16 c0       	rjmp	.+44     	; 0x69c <vfprintf+0x188>
 670:	28 01       	movw	r4, r16
 672:	22 e0       	ldi	r18, 0x02	; 2
 674:	42 0e       	add	r4, r18
 676:	51 1c       	adc	r5, r1
 678:	f8 01       	movw	r30, r16
 67a:	a0 80       	ld	r10, Z
 67c:	b1 80       	ldd	r11, Z+1	; 0x01
 67e:	36 fe       	sbrs	r3, 6
 680:	03 c0       	rjmp	.+6      	; 0x688 <vfprintf+0x174>
 682:	69 2d       	mov	r22, r9
 684:	70 e0       	ldi	r23, 0x00	; 0
 686:	02 c0       	rjmp	.+4      	; 0x68c <vfprintf+0x178>
 688:	6f ef       	ldi	r22, 0xFF	; 255
 68a:	7f ef       	ldi	r23, 0xFF	; 255
 68c:	c5 01       	movw	r24, r10
 68e:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <strnlen_P>
 692:	4c 01       	movw	r8, r24
 694:	f3 2d       	mov	r31, r3
 696:	f0 68       	ori	r31, 0x80	; 128
 698:	3f 2e       	mov	r3, r31
 69a:	82 01       	movw	r16, r4
 69c:	33 fc       	sbrc	r3, 3
 69e:	1b c0       	rjmp	.+54     	; 0x6d6 <vfprintf+0x1c2>
 6a0:	82 2d       	mov	r24, r2
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	88 16       	cp	r8, r24
 6a6:	99 06       	cpc	r9, r25
 6a8:	b0 f4       	brcc	.+44     	; 0x6d6 <vfprintf+0x1c2>
 6aa:	b6 01       	movw	r22, r12
 6ac:	80 e2       	ldi	r24, 0x20	; 32
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 6b4:	2a 94       	dec	r2
 6b6:	f4 cf       	rjmp	.-24     	; 0x6a0 <vfprintf+0x18c>
 6b8:	f5 01       	movw	r30, r10
 6ba:	37 fc       	sbrc	r3, 7
 6bc:	85 91       	lpm	r24, Z+
 6be:	37 fe       	sbrs	r3, 7
 6c0:	81 91       	ld	r24, Z+
 6c2:	5f 01       	movw	r10, r30
 6c4:	b6 01       	movw	r22, r12
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 6cc:	21 10       	cpse	r2, r1
 6ce:	2a 94       	dec	r2
 6d0:	21 e0       	ldi	r18, 0x01	; 1
 6d2:	82 1a       	sub	r8, r18
 6d4:	91 08       	sbc	r9, r1
 6d6:	81 14       	cp	r8, r1
 6d8:	91 04       	cpc	r9, r1
 6da:	71 f7       	brne	.-36     	; 0x6b8 <vfprintf+0x1a4>
 6dc:	e8 c0       	rjmp	.+464    	; 0x8ae <vfprintf+0x39a>
 6de:	84 36       	cpi	r24, 0x64	; 100
 6e0:	11 f0       	breq	.+4      	; 0x6e6 <vfprintf+0x1d2>
 6e2:	89 36       	cpi	r24, 0x69	; 105
 6e4:	41 f5       	brne	.+80     	; 0x736 <vfprintf+0x222>
 6e6:	f8 01       	movw	r30, r16
 6e8:	37 fe       	sbrs	r3, 7
 6ea:	07 c0       	rjmp	.+14     	; 0x6fa <vfprintf+0x1e6>
 6ec:	60 81       	ld	r22, Z
 6ee:	71 81       	ldd	r23, Z+1	; 0x01
 6f0:	82 81       	ldd	r24, Z+2	; 0x02
 6f2:	93 81       	ldd	r25, Z+3	; 0x03
 6f4:	0c 5f       	subi	r16, 0xFC	; 252
 6f6:	1f 4f       	sbci	r17, 0xFF	; 255
 6f8:	08 c0       	rjmp	.+16     	; 0x70a <vfprintf+0x1f6>
 6fa:	60 81       	ld	r22, Z
 6fc:	71 81       	ldd	r23, Z+1	; 0x01
 6fe:	07 2e       	mov	r0, r23
 700:	00 0c       	add	r0, r0
 702:	88 0b       	sbc	r24, r24
 704:	99 0b       	sbc	r25, r25
 706:	0e 5f       	subi	r16, 0xFE	; 254
 708:	1f 4f       	sbci	r17, 0xFF	; 255
 70a:	f3 2d       	mov	r31, r3
 70c:	ff 76       	andi	r31, 0x6F	; 111
 70e:	3f 2e       	mov	r3, r31
 710:	97 ff       	sbrs	r25, 7
 712:	09 c0       	rjmp	.+18     	; 0x726 <vfprintf+0x212>
 714:	90 95       	com	r25
 716:	80 95       	com	r24
 718:	70 95       	com	r23
 71a:	61 95       	neg	r22
 71c:	7f 4f       	sbci	r23, 0xFF	; 255
 71e:	8f 4f       	sbci	r24, 0xFF	; 255
 720:	9f 4f       	sbci	r25, 0xFF	; 255
 722:	f0 68       	ori	r31, 0x80	; 128
 724:	3f 2e       	mov	r3, r31
 726:	2a e0       	ldi	r18, 0x0A	; 10
 728:	30 e0       	ldi	r19, 0x00	; 0
 72a:	a3 01       	movw	r20, r6
 72c:	0e 94 bd 04 	call	0x97a	; 0x97a <__ultoa_invert>
 730:	88 2e       	mov	r8, r24
 732:	86 18       	sub	r8, r6
 734:	45 c0       	rjmp	.+138    	; 0x7c0 <vfprintf+0x2ac>
 736:	85 37       	cpi	r24, 0x75	; 117
 738:	31 f4       	brne	.+12     	; 0x746 <vfprintf+0x232>
 73a:	23 2d       	mov	r18, r3
 73c:	2f 7e       	andi	r18, 0xEF	; 239
 73e:	b2 2e       	mov	r11, r18
 740:	2a e0       	ldi	r18, 0x0A	; 10
 742:	30 e0       	ldi	r19, 0x00	; 0
 744:	25 c0       	rjmp	.+74     	; 0x790 <vfprintf+0x27c>
 746:	93 2d       	mov	r25, r3
 748:	99 7f       	andi	r25, 0xF9	; 249
 74a:	b9 2e       	mov	r11, r25
 74c:	8f 36       	cpi	r24, 0x6F	; 111
 74e:	c1 f0       	breq	.+48     	; 0x780 <vfprintf+0x26c>
 750:	18 f4       	brcc	.+6      	; 0x758 <vfprintf+0x244>
 752:	88 35       	cpi	r24, 0x58	; 88
 754:	79 f0       	breq	.+30     	; 0x774 <vfprintf+0x260>
 756:	b5 c0       	rjmp	.+362    	; 0x8c2 <vfprintf+0x3ae>
 758:	80 37       	cpi	r24, 0x70	; 112
 75a:	19 f0       	breq	.+6      	; 0x762 <vfprintf+0x24e>
 75c:	88 37       	cpi	r24, 0x78	; 120
 75e:	21 f0       	breq	.+8      	; 0x768 <vfprintf+0x254>
 760:	b0 c0       	rjmp	.+352    	; 0x8c2 <vfprintf+0x3ae>
 762:	e9 2f       	mov	r30, r25
 764:	e0 61       	ori	r30, 0x10	; 16
 766:	be 2e       	mov	r11, r30
 768:	b4 fe       	sbrs	r11, 4
 76a:	0d c0       	rjmp	.+26     	; 0x786 <vfprintf+0x272>
 76c:	fb 2d       	mov	r31, r11
 76e:	f4 60       	ori	r31, 0x04	; 4
 770:	bf 2e       	mov	r11, r31
 772:	09 c0       	rjmp	.+18     	; 0x786 <vfprintf+0x272>
 774:	34 fe       	sbrs	r3, 4
 776:	0a c0       	rjmp	.+20     	; 0x78c <vfprintf+0x278>
 778:	29 2f       	mov	r18, r25
 77a:	26 60       	ori	r18, 0x06	; 6
 77c:	b2 2e       	mov	r11, r18
 77e:	06 c0       	rjmp	.+12     	; 0x78c <vfprintf+0x278>
 780:	28 e0       	ldi	r18, 0x08	; 8
 782:	30 e0       	ldi	r19, 0x00	; 0
 784:	05 c0       	rjmp	.+10     	; 0x790 <vfprintf+0x27c>
 786:	20 e1       	ldi	r18, 0x10	; 16
 788:	30 e0       	ldi	r19, 0x00	; 0
 78a:	02 c0       	rjmp	.+4      	; 0x790 <vfprintf+0x27c>
 78c:	20 e1       	ldi	r18, 0x10	; 16
 78e:	32 e0       	ldi	r19, 0x02	; 2
 790:	f8 01       	movw	r30, r16
 792:	b7 fe       	sbrs	r11, 7
 794:	07 c0       	rjmp	.+14     	; 0x7a4 <vfprintf+0x290>
 796:	60 81       	ld	r22, Z
 798:	71 81       	ldd	r23, Z+1	; 0x01
 79a:	82 81       	ldd	r24, Z+2	; 0x02
 79c:	93 81       	ldd	r25, Z+3	; 0x03
 79e:	0c 5f       	subi	r16, 0xFC	; 252
 7a0:	1f 4f       	sbci	r17, 0xFF	; 255
 7a2:	06 c0       	rjmp	.+12     	; 0x7b0 <vfprintf+0x29c>
 7a4:	60 81       	ld	r22, Z
 7a6:	71 81       	ldd	r23, Z+1	; 0x01
 7a8:	80 e0       	ldi	r24, 0x00	; 0
 7aa:	90 e0       	ldi	r25, 0x00	; 0
 7ac:	0e 5f       	subi	r16, 0xFE	; 254
 7ae:	1f 4f       	sbci	r17, 0xFF	; 255
 7b0:	a3 01       	movw	r20, r6
 7b2:	0e 94 bd 04 	call	0x97a	; 0x97a <__ultoa_invert>
 7b6:	88 2e       	mov	r8, r24
 7b8:	86 18       	sub	r8, r6
 7ba:	fb 2d       	mov	r31, r11
 7bc:	ff 77       	andi	r31, 0x7F	; 127
 7be:	3f 2e       	mov	r3, r31
 7c0:	36 fe       	sbrs	r3, 6
 7c2:	0d c0       	rjmp	.+26     	; 0x7de <vfprintf+0x2ca>
 7c4:	23 2d       	mov	r18, r3
 7c6:	2e 7f       	andi	r18, 0xFE	; 254
 7c8:	a2 2e       	mov	r10, r18
 7ca:	89 14       	cp	r8, r9
 7cc:	58 f4       	brcc	.+22     	; 0x7e4 <vfprintf+0x2d0>
 7ce:	34 fe       	sbrs	r3, 4
 7d0:	0b c0       	rjmp	.+22     	; 0x7e8 <vfprintf+0x2d4>
 7d2:	32 fc       	sbrc	r3, 2
 7d4:	09 c0       	rjmp	.+18     	; 0x7e8 <vfprintf+0x2d4>
 7d6:	83 2d       	mov	r24, r3
 7d8:	8e 7e       	andi	r24, 0xEE	; 238
 7da:	a8 2e       	mov	r10, r24
 7dc:	05 c0       	rjmp	.+10     	; 0x7e8 <vfprintf+0x2d4>
 7de:	b8 2c       	mov	r11, r8
 7e0:	a3 2c       	mov	r10, r3
 7e2:	03 c0       	rjmp	.+6      	; 0x7ea <vfprintf+0x2d6>
 7e4:	b8 2c       	mov	r11, r8
 7e6:	01 c0       	rjmp	.+2      	; 0x7ea <vfprintf+0x2d6>
 7e8:	b9 2c       	mov	r11, r9
 7ea:	a4 fe       	sbrs	r10, 4
 7ec:	0f c0       	rjmp	.+30     	; 0x80c <vfprintf+0x2f8>
 7ee:	fe 01       	movw	r30, r28
 7f0:	e8 0d       	add	r30, r8
 7f2:	f1 1d       	adc	r31, r1
 7f4:	80 81       	ld	r24, Z
 7f6:	80 33       	cpi	r24, 0x30	; 48
 7f8:	21 f4       	brne	.+8      	; 0x802 <vfprintf+0x2ee>
 7fa:	9a 2d       	mov	r25, r10
 7fc:	99 7e       	andi	r25, 0xE9	; 233
 7fe:	a9 2e       	mov	r10, r25
 800:	09 c0       	rjmp	.+18     	; 0x814 <vfprintf+0x300>
 802:	a2 fe       	sbrs	r10, 2
 804:	06 c0       	rjmp	.+12     	; 0x812 <vfprintf+0x2fe>
 806:	b3 94       	inc	r11
 808:	b3 94       	inc	r11
 80a:	04 c0       	rjmp	.+8      	; 0x814 <vfprintf+0x300>
 80c:	8a 2d       	mov	r24, r10
 80e:	86 78       	andi	r24, 0x86	; 134
 810:	09 f0       	breq	.+2      	; 0x814 <vfprintf+0x300>
 812:	b3 94       	inc	r11
 814:	a3 fc       	sbrc	r10, 3
 816:	11 c0       	rjmp	.+34     	; 0x83a <vfprintf+0x326>
 818:	a0 fe       	sbrs	r10, 0
 81a:	06 c0       	rjmp	.+12     	; 0x828 <vfprintf+0x314>
 81c:	b2 14       	cp	r11, r2
 81e:	88 f4       	brcc	.+34     	; 0x842 <vfprintf+0x32e>
 820:	28 0c       	add	r2, r8
 822:	92 2c       	mov	r9, r2
 824:	9b 18       	sub	r9, r11
 826:	0e c0       	rjmp	.+28     	; 0x844 <vfprintf+0x330>
 828:	b2 14       	cp	r11, r2
 82a:	60 f4       	brcc	.+24     	; 0x844 <vfprintf+0x330>
 82c:	b6 01       	movw	r22, r12
 82e:	80 e2       	ldi	r24, 0x20	; 32
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 836:	b3 94       	inc	r11
 838:	f7 cf       	rjmp	.-18     	; 0x828 <vfprintf+0x314>
 83a:	b2 14       	cp	r11, r2
 83c:	18 f4       	brcc	.+6      	; 0x844 <vfprintf+0x330>
 83e:	2b 18       	sub	r2, r11
 840:	02 c0       	rjmp	.+4      	; 0x846 <vfprintf+0x332>
 842:	98 2c       	mov	r9, r8
 844:	21 2c       	mov	r2, r1
 846:	a4 fe       	sbrs	r10, 4
 848:	10 c0       	rjmp	.+32     	; 0x86a <vfprintf+0x356>
 84a:	b6 01       	movw	r22, r12
 84c:	80 e3       	ldi	r24, 0x30	; 48
 84e:	90 e0       	ldi	r25, 0x00	; 0
 850:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 854:	a2 fe       	sbrs	r10, 2
 856:	17 c0       	rjmp	.+46     	; 0x886 <vfprintf+0x372>
 858:	a1 fc       	sbrc	r10, 1
 85a:	03 c0       	rjmp	.+6      	; 0x862 <vfprintf+0x34e>
 85c:	88 e7       	ldi	r24, 0x78	; 120
 85e:	90 e0       	ldi	r25, 0x00	; 0
 860:	02 c0       	rjmp	.+4      	; 0x866 <vfprintf+0x352>
 862:	88 e5       	ldi	r24, 0x58	; 88
 864:	90 e0       	ldi	r25, 0x00	; 0
 866:	b6 01       	movw	r22, r12
 868:	0c c0       	rjmp	.+24     	; 0x882 <vfprintf+0x36e>
 86a:	8a 2d       	mov	r24, r10
 86c:	86 78       	andi	r24, 0x86	; 134
 86e:	59 f0       	breq	.+22     	; 0x886 <vfprintf+0x372>
 870:	a1 fe       	sbrs	r10, 1
 872:	02 c0       	rjmp	.+4      	; 0x878 <vfprintf+0x364>
 874:	8b e2       	ldi	r24, 0x2B	; 43
 876:	01 c0       	rjmp	.+2      	; 0x87a <vfprintf+0x366>
 878:	80 e2       	ldi	r24, 0x20	; 32
 87a:	a7 fc       	sbrc	r10, 7
 87c:	8d e2       	ldi	r24, 0x2D	; 45
 87e:	b6 01       	movw	r22, r12
 880:	90 e0       	ldi	r25, 0x00	; 0
 882:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 886:	89 14       	cp	r8, r9
 888:	38 f4       	brcc	.+14     	; 0x898 <vfprintf+0x384>
 88a:	b6 01       	movw	r22, r12
 88c:	80 e3       	ldi	r24, 0x30	; 48
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 894:	9a 94       	dec	r9
 896:	f7 cf       	rjmp	.-18     	; 0x886 <vfprintf+0x372>
 898:	8a 94       	dec	r8
 89a:	f3 01       	movw	r30, r6
 89c:	e8 0d       	add	r30, r8
 89e:	f1 1d       	adc	r31, r1
 8a0:	80 81       	ld	r24, Z
 8a2:	b6 01       	movw	r22, r12
 8a4:	90 e0       	ldi	r25, 0x00	; 0
 8a6:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 8aa:	81 10       	cpse	r8, r1
 8ac:	f5 cf       	rjmp	.-22     	; 0x898 <vfprintf+0x384>
 8ae:	22 20       	and	r2, r2
 8b0:	09 f4       	brne	.+2      	; 0x8b4 <vfprintf+0x3a0>
 8b2:	42 ce       	rjmp	.-892    	; 0x538 <vfprintf+0x24>
 8b4:	b6 01       	movw	r22, r12
 8b6:	80 e2       	ldi	r24, 0x20	; 32
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 8be:	2a 94       	dec	r2
 8c0:	f6 cf       	rjmp	.-20     	; 0x8ae <vfprintf+0x39a>
 8c2:	f6 01       	movw	r30, r12
 8c4:	86 81       	ldd	r24, Z+6	; 0x06
 8c6:	97 81       	ldd	r25, Z+7	; 0x07
 8c8:	02 c0       	rjmp	.+4      	; 0x8ce <vfprintf+0x3ba>
 8ca:	8f ef       	ldi	r24, 0xFF	; 255
 8cc:	9f ef       	ldi	r25, 0xFF	; 255
 8ce:	2b 96       	adiw	r28, 0x0b	; 11
 8d0:	e2 e1       	ldi	r30, 0x12	; 18
 8d2:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__epilogue_restores__>

000008d6 <strnlen_P>:
 8d6:	fc 01       	movw	r30, r24
 8d8:	05 90       	lpm	r0, Z+
 8da:	61 50       	subi	r22, 0x01	; 1
 8dc:	70 40       	sbci	r23, 0x00	; 0
 8de:	01 10       	cpse	r0, r1
 8e0:	d8 f7       	brcc	.-10     	; 0x8d8 <strnlen_P+0x2>
 8e2:	80 95       	com	r24
 8e4:	90 95       	com	r25
 8e6:	8e 0f       	add	r24, r30
 8e8:	9f 1f       	adc	r25, r31
 8ea:	08 95       	ret

000008ec <strnlen>:
 8ec:	fc 01       	movw	r30, r24
 8ee:	61 50       	subi	r22, 0x01	; 1
 8f0:	70 40       	sbci	r23, 0x00	; 0
 8f2:	01 90       	ld	r0, Z+
 8f4:	01 10       	cpse	r0, r1
 8f6:	d8 f7       	brcc	.-10     	; 0x8ee <strnlen+0x2>
 8f8:	80 95       	com	r24
 8fa:	90 95       	com	r25
 8fc:	8e 0f       	add	r24, r30
 8fe:	9f 1f       	adc	r25, r31
 900:	08 95       	ret

00000902 <fputc>:
 902:	0f 93       	push	r16
 904:	1f 93       	push	r17
 906:	cf 93       	push	r28
 908:	df 93       	push	r29
 90a:	fb 01       	movw	r30, r22
 90c:	23 81       	ldd	r18, Z+3	; 0x03
 90e:	21 fd       	sbrc	r18, 1
 910:	03 c0       	rjmp	.+6      	; 0x918 <fputc+0x16>
 912:	8f ef       	ldi	r24, 0xFF	; 255
 914:	9f ef       	ldi	r25, 0xFF	; 255
 916:	2c c0       	rjmp	.+88     	; 0x970 <fputc+0x6e>
 918:	22 ff       	sbrs	r18, 2
 91a:	16 c0       	rjmp	.+44     	; 0x948 <fputc+0x46>
 91c:	46 81       	ldd	r20, Z+6	; 0x06
 91e:	57 81       	ldd	r21, Z+7	; 0x07
 920:	24 81       	ldd	r18, Z+4	; 0x04
 922:	35 81       	ldd	r19, Z+5	; 0x05
 924:	42 17       	cp	r20, r18
 926:	53 07       	cpc	r21, r19
 928:	44 f4       	brge	.+16     	; 0x93a <fputc+0x38>
 92a:	a0 81       	ld	r26, Z
 92c:	b1 81       	ldd	r27, Z+1	; 0x01
 92e:	9d 01       	movw	r18, r26
 930:	2f 5f       	subi	r18, 0xFF	; 255
 932:	3f 4f       	sbci	r19, 0xFF	; 255
 934:	31 83       	std	Z+1, r19	; 0x01
 936:	20 83       	st	Z, r18
 938:	8c 93       	st	X, r24
 93a:	26 81       	ldd	r18, Z+6	; 0x06
 93c:	37 81       	ldd	r19, Z+7	; 0x07
 93e:	2f 5f       	subi	r18, 0xFF	; 255
 940:	3f 4f       	sbci	r19, 0xFF	; 255
 942:	37 83       	std	Z+7, r19	; 0x07
 944:	26 83       	std	Z+6, r18	; 0x06
 946:	14 c0       	rjmp	.+40     	; 0x970 <fputc+0x6e>
 948:	8b 01       	movw	r16, r22
 94a:	ec 01       	movw	r28, r24
 94c:	fb 01       	movw	r30, r22
 94e:	00 84       	ldd	r0, Z+8	; 0x08
 950:	f1 85       	ldd	r31, Z+9	; 0x09
 952:	e0 2d       	mov	r30, r0
 954:	09 95       	icall
 956:	89 2b       	or	r24, r25
 958:	e1 f6       	brne	.-72     	; 0x912 <fputc+0x10>
 95a:	d8 01       	movw	r26, r16
 95c:	16 96       	adiw	r26, 0x06	; 6
 95e:	8d 91       	ld	r24, X+
 960:	9c 91       	ld	r25, X
 962:	17 97       	sbiw	r26, 0x07	; 7
 964:	01 96       	adiw	r24, 0x01	; 1
 966:	17 96       	adiw	r26, 0x07	; 7
 968:	9c 93       	st	X, r25
 96a:	8e 93       	st	-X, r24
 96c:	16 97       	sbiw	r26, 0x06	; 6
 96e:	ce 01       	movw	r24, r28
 970:	df 91       	pop	r29
 972:	cf 91       	pop	r28
 974:	1f 91       	pop	r17
 976:	0f 91       	pop	r16
 978:	08 95       	ret

0000097a <__ultoa_invert>:
 97a:	fa 01       	movw	r30, r20
 97c:	aa 27       	eor	r26, r26
 97e:	28 30       	cpi	r18, 0x08	; 8
 980:	51 f1       	breq	.+84     	; 0x9d6 <__ultoa_invert+0x5c>
 982:	20 31       	cpi	r18, 0x10	; 16
 984:	81 f1       	breq	.+96     	; 0x9e6 <__ultoa_invert+0x6c>
 986:	e8 94       	clt
 988:	6f 93       	push	r22
 98a:	6e 7f       	andi	r22, 0xFE	; 254
 98c:	6e 5f       	subi	r22, 0xFE	; 254
 98e:	7f 4f       	sbci	r23, 0xFF	; 255
 990:	8f 4f       	sbci	r24, 0xFF	; 255
 992:	9f 4f       	sbci	r25, 0xFF	; 255
 994:	af 4f       	sbci	r26, 0xFF	; 255
 996:	b1 e0       	ldi	r27, 0x01	; 1
 998:	3e d0       	rcall	.+124    	; 0xa16 <__ultoa_invert+0x9c>
 99a:	b4 e0       	ldi	r27, 0x04	; 4
 99c:	3c d0       	rcall	.+120    	; 0xa16 <__ultoa_invert+0x9c>
 99e:	67 0f       	add	r22, r23
 9a0:	78 1f       	adc	r23, r24
 9a2:	89 1f       	adc	r24, r25
 9a4:	9a 1f       	adc	r25, r26
 9a6:	a1 1d       	adc	r26, r1
 9a8:	68 0f       	add	r22, r24
 9aa:	79 1f       	adc	r23, r25
 9ac:	8a 1f       	adc	r24, r26
 9ae:	91 1d       	adc	r25, r1
 9b0:	a1 1d       	adc	r26, r1
 9b2:	6a 0f       	add	r22, r26
 9b4:	71 1d       	adc	r23, r1
 9b6:	81 1d       	adc	r24, r1
 9b8:	91 1d       	adc	r25, r1
 9ba:	a1 1d       	adc	r26, r1
 9bc:	20 d0       	rcall	.+64     	; 0x9fe <__ultoa_invert+0x84>
 9be:	09 f4       	brne	.+2      	; 0x9c2 <__ultoa_invert+0x48>
 9c0:	68 94       	set
 9c2:	3f 91       	pop	r19
 9c4:	2a e0       	ldi	r18, 0x0A	; 10
 9c6:	26 9f       	mul	r18, r22
 9c8:	11 24       	eor	r1, r1
 9ca:	30 19       	sub	r19, r0
 9cc:	30 5d       	subi	r19, 0xD0	; 208
 9ce:	31 93       	st	Z+, r19
 9d0:	de f6       	brtc	.-74     	; 0x988 <__ultoa_invert+0xe>
 9d2:	cf 01       	movw	r24, r30
 9d4:	08 95       	ret
 9d6:	46 2f       	mov	r20, r22
 9d8:	47 70       	andi	r20, 0x07	; 7
 9da:	40 5d       	subi	r20, 0xD0	; 208
 9dc:	41 93       	st	Z+, r20
 9de:	b3 e0       	ldi	r27, 0x03	; 3
 9e0:	0f d0       	rcall	.+30     	; 0xa00 <__ultoa_invert+0x86>
 9e2:	c9 f7       	brne	.-14     	; 0x9d6 <__ultoa_invert+0x5c>
 9e4:	f6 cf       	rjmp	.-20     	; 0x9d2 <__ultoa_invert+0x58>
 9e6:	46 2f       	mov	r20, r22
 9e8:	4f 70       	andi	r20, 0x0F	; 15
 9ea:	40 5d       	subi	r20, 0xD0	; 208
 9ec:	4a 33       	cpi	r20, 0x3A	; 58
 9ee:	18 f0       	brcs	.+6      	; 0x9f6 <__ultoa_invert+0x7c>
 9f0:	49 5d       	subi	r20, 0xD9	; 217
 9f2:	31 fd       	sbrc	r19, 1
 9f4:	40 52       	subi	r20, 0x20	; 32
 9f6:	41 93       	st	Z+, r20
 9f8:	02 d0       	rcall	.+4      	; 0x9fe <__ultoa_invert+0x84>
 9fa:	a9 f7       	brne	.-22     	; 0x9e6 <__ultoa_invert+0x6c>
 9fc:	ea cf       	rjmp	.-44     	; 0x9d2 <__ultoa_invert+0x58>
 9fe:	b4 e0       	ldi	r27, 0x04	; 4
 a00:	a6 95       	lsr	r26
 a02:	97 95       	ror	r25
 a04:	87 95       	ror	r24
 a06:	77 95       	ror	r23
 a08:	67 95       	ror	r22
 a0a:	ba 95       	dec	r27
 a0c:	c9 f7       	brne	.-14     	; 0xa00 <__ultoa_invert+0x86>
 a0e:	00 97       	sbiw	r24, 0x00	; 0
 a10:	61 05       	cpc	r22, r1
 a12:	71 05       	cpc	r23, r1
 a14:	08 95       	ret
 a16:	9b 01       	movw	r18, r22
 a18:	ac 01       	movw	r20, r24
 a1a:	0a 2e       	mov	r0, r26
 a1c:	06 94       	lsr	r0
 a1e:	57 95       	ror	r21
 a20:	47 95       	ror	r20
 a22:	37 95       	ror	r19
 a24:	27 95       	ror	r18
 a26:	ba 95       	dec	r27
 a28:	c9 f7       	brne	.-14     	; 0xa1c <__ultoa_invert+0xa2>
 a2a:	62 0f       	add	r22, r18
 a2c:	73 1f       	adc	r23, r19
 a2e:	84 1f       	adc	r24, r20
 a30:	95 1f       	adc	r25, r21
 a32:	a0 1d       	adc	r26, r0
 a34:	08 95       	ret

00000a36 <__prologue_saves__>:
 a36:	2f 92       	push	r2
 a38:	3f 92       	push	r3
 a3a:	4f 92       	push	r4
 a3c:	5f 92       	push	r5
 a3e:	6f 92       	push	r6
 a40:	7f 92       	push	r7
 a42:	8f 92       	push	r8
 a44:	9f 92       	push	r9
 a46:	af 92       	push	r10
 a48:	bf 92       	push	r11
 a4a:	cf 92       	push	r12
 a4c:	df 92       	push	r13
 a4e:	ef 92       	push	r14
 a50:	ff 92       	push	r15
 a52:	0f 93       	push	r16
 a54:	1f 93       	push	r17
 a56:	cf 93       	push	r28
 a58:	df 93       	push	r29
 a5a:	cd b7       	in	r28, 0x3d	; 61
 a5c:	de b7       	in	r29, 0x3e	; 62
 a5e:	ca 1b       	sub	r28, r26
 a60:	db 0b       	sbc	r29, r27
 a62:	0f b6       	in	r0, 0x3f	; 63
 a64:	f8 94       	cli
 a66:	de bf       	out	0x3e, r29	; 62
 a68:	0f be       	out	0x3f, r0	; 63
 a6a:	cd bf       	out	0x3d, r28	; 61
 a6c:	09 94       	ijmp

00000a6e <__epilogue_restores__>:
 a6e:	2a 88       	ldd	r2, Y+18	; 0x12
 a70:	39 88       	ldd	r3, Y+17	; 0x11
 a72:	48 88       	ldd	r4, Y+16	; 0x10
 a74:	5f 84       	ldd	r5, Y+15	; 0x0f
 a76:	6e 84       	ldd	r6, Y+14	; 0x0e
 a78:	7d 84       	ldd	r7, Y+13	; 0x0d
 a7a:	8c 84       	ldd	r8, Y+12	; 0x0c
 a7c:	9b 84       	ldd	r9, Y+11	; 0x0b
 a7e:	aa 84       	ldd	r10, Y+10	; 0x0a
 a80:	b9 84       	ldd	r11, Y+9	; 0x09
 a82:	c8 84       	ldd	r12, Y+8	; 0x08
 a84:	df 80       	ldd	r13, Y+7	; 0x07
 a86:	ee 80       	ldd	r14, Y+6	; 0x06
 a88:	fd 80       	ldd	r15, Y+5	; 0x05
 a8a:	0c 81       	ldd	r16, Y+4	; 0x04
 a8c:	1b 81       	ldd	r17, Y+3	; 0x03
 a8e:	aa 81       	ldd	r26, Y+2	; 0x02
 a90:	b9 81       	ldd	r27, Y+1	; 0x01
 a92:	ce 0f       	add	r28, r30
 a94:	d1 1d       	adc	r29, r1
 a96:	0f b6       	in	r0, 0x3f	; 63
 a98:	f8 94       	cli
 a9a:	de bf       	out	0x3e, r29	; 62
 a9c:	0f be       	out	0x3f, r0	; 63
 a9e:	cd bf       	out	0x3d, r28	; 61
 aa0:	ed 01       	movw	r28, r26
 aa2:	08 95       	ret

00000aa4 <_exit>:
 aa4:	f8 94       	cli

00000aa6 <__stop_program>:
 aa6:	ff cf       	rjmp	.-2      	; 0xaa6 <__stop_program>
