
4b2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000005c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000054c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  000005c0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005c0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000630  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000aa8  00000000  00000000  00000658  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009a6  00000000  00000000  00001100  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000353  00000000  00000000  00001aa6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000050  00000000  00000000  00001dfc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ac  00000000  00000000  00001e4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000e5  00000000  00000000  000022f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  000023dd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  1c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  2c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  38:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  54:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  68:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  6c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  70:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  74:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  78:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  7c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  80:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  84:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  88:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  8c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  90:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  94:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  98:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  9c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  ac:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  b0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_clear_bss>:
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
  c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
  ca:	a4 30       	cpi	r26, 0x04	; 4
  cc:	b2 07       	cpc	r27, r18
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	0e 94 b8 00 	call	0x170	; 0x170 <main>
  d4:	0c 94 a4 02 	jmp	0x548	; 0x548 <_exit>

000000d8 <__bad_interrupt>:
  d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <read_poten>:
		}
	}
}

void read_poten(void)
{
  dc:	ff 92       	push	r15
  de:	0f 93       	push	r16
  e0:	1f 93       	push	r17
  e2:	cf 93       	push	r28
  e4:	df 93       	push	r29
	unsigned char i=4;
	poten = 0;
  e6:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
  ea:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
  ee:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <_edata+0x2>
  f2:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <_edata+0x3>
  f6:	68 94       	set
  f8:	ff 24       	eor	r15, r15
  fa:	f2 f8       	bld	r15, 2
	while(i--) {
		ADCSRA |= (1<<ADSC);
  fc:	ca e7       	ldi	r28, 0x7A	; 122
  fe:	d0 e0       	ldi	r29, 0x00	; 0
		while(ADCSRA & (1<<ADSC));
		poten += ADC;
 100:	08 e7       	ldi	r16, 0x78	; 120
 102:	10 e0       	ldi	r17, 0x00	; 0
void read_poten(void)
{
	unsigned char i=4;
	poten = 0;
	while(i--) {
		ADCSRA |= (1<<ADSC);
 104:	88 81       	ld	r24, Y
 106:	80 64       	ori	r24, 0x40	; 64
 108:	88 83       	st	Y, r24
		while(ADCSRA & (1<<ADSC));
 10a:	88 81       	ld	r24, Y
 10c:	86 fd       	sbrc	r24, 6
 10e:	fd cf       	rjmp	.-6      	; 0x10a <read_poten+0x2e>
		poten += ADC;
 110:	f8 01       	movw	r30, r16
 112:	60 81       	ld	r22, Z
 114:	71 81       	ldd	r23, Z+1	; 0x01
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 80 01 	call	0x300	; 0x300 <__floatunsisf>
 11e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <_edata>
 122:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <_edata+0x1>
 126:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <_edata+0x2>
 12a:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <_edata+0x3>
 12e:	0e 94 0f 01 	call	0x21e	; 0x21e <__addsf3>
 132:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 136:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 13a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
 13e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_edata+0x3>
 142:	fa 94       	dec	r15

void read_poten(void)
{
	unsigned char i=4;
	poten = 0;
	while(i--) {
 144:	f1 10       	cpse	r15, r1
 146:	de cf       	rjmp	.-68     	; 0x104 <read_poten+0x28>
		ADCSRA |= (1<<ADSC);
		while(ADCSRA & (1<<ADSC));
		poten += ADC;
	}
	poten = poten/4;
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	40 e8       	ldi	r20, 0x80	; 128
 14e:	5e e3       	ldi	r21, 0x3E	; 62
 150:	0e 94 37 02 	call	0x46e	; 0x46e <__mulsf3>
 154:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 158:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 15c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
 160:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_edata+0x3>
}
 164:	df 91       	pop	r29
 166:	cf 91       	pop	r28
 168:	1f 91       	pop	r17
 16a:	0f 91       	pop	r16
 16c:	ff 90       	pop	r15
 16e:	08 95       	ret

00000170 <main>:

float poten;

int main(void)
{
	TCCR1A |= (1<<COM1A1)|(1<<COM1B1)|(1<<WGM11);
 170:	e0 e8       	ldi	r30, 0x80	; 128
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	80 81       	ld	r24, Z
 176:	82 6a       	ori	r24, 0xA2	; 162
 178:	80 83       	st	Z, r24
	TCCR1B|=(1<<WGM13)|(1<<WGM12)|(1<<CS11)|(1<<CS10);
 17a:	e1 e8       	ldi	r30, 0x81	; 129
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	80 81       	ld	r24, Z
 180:	8b 61       	ori	r24, 0x1B	; 27
 182:	80 83       	st	Z, r24
	ICR1 = 4999;
 184:	87 e8       	ldi	r24, 0x87	; 135
 186:	93 e1       	ldi	r25, 0x13	; 19
 188:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 18c:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
	//fPWM = focs/N(TOP+1) = 50Hz, 20ms
	DDRB |= (1<<PB1);// PWM pin set as output
 190:	21 9a       	sbi	0x04, 1	; 4
	
	ADMUX = (0<<REFS1)|(1<<REFS0)|(0<<ADLAR)|(0<<MUX2)|(0<<MUX1)|(0<<MUX0);
 192:	80 e4       	ldi	r24, 0x40	; 64
 194:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	ADCSRA=(1<<ADEN)|(0<<ADSC)|(0<<ADATE)|(0<<ADIF)|(0<<ADIE)|(1<<ADPS2)|(0<<ADPS1)|(1<<ADPS0);
 198:	85 e8       	ldi	r24, 0x85	; 133
 19a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
			OCR1A = 535; //180 degree
			_delay_ms(100);
		}
		else if (poten <= 20)
		{
			OCR1A = 97;	//0 degree
 19e:	c8 e8       	ldi	r28, 0x88	; 136
 1a0:	d0 e0       	ldi	r29, 0x00	; 0
 1a2:	0f 2e       	mov	r0, r31
 1a4:	f1 e6       	ldi	r31, 0x61	; 97
 1a6:	af 2e       	mov	r10, r31
 1a8:	b1 2c       	mov	r11, r1
 1aa:	f0 2d       	mov	r31, r0
	while(1)
	{
		read_poten();
		if (poten >= 1023)
		{
			OCR1A = 535; //180 degree
 1ac:	07 e1       	ldi	r16, 0x17	; 23
 1ae:	12 e0       	ldi	r17, 0x02	; 2
	ADCSRA=(1<<ADEN)|(0<<ADSC)|(0<<ADATE)|(0<<ADIF)|(0<<ADIE)|(1<<ADPS2)|(0<<ADPS1)|(1<<ADPS0);
	//the same setup as the first set.
	
	while(1)
	{
		read_poten();
 1b0:	0e 94 6e 00 	call	0xdc	; 0xdc <read_poten>
		if (poten >= 1023)
 1b4:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <_edata>
 1b8:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <_edata+0x1>
 1bc:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <_edata+0x2>
 1c0:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <_edata+0x3>
 1c4:	20 e0       	ldi	r18, 0x00	; 0
 1c6:	30 ec       	ldi	r19, 0xC0	; 192
 1c8:	4f e7       	ldi	r20, 0x7F	; 127
 1ca:	54 e4       	ldi	r21, 0x44	; 68
 1cc:	c7 01       	movw	r24, r14
 1ce:	b6 01       	movw	r22, r12
 1d0:	0e 94 32 02 	call	0x464	; 0x464 <__gesf2>
 1d4:	88 23       	and	r24, r24
 1d6:	64 f0       	brlt	.+24     	; 0x1f0 <main+0x80>
		{
			OCR1A = 535; //180 degree
 1d8:	19 83       	std	Y+1, r17	; 0x01
 1da:	08 83       	st	Y, r16
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1dc:	2f ef       	ldi	r18, 0xFF	; 255
 1de:	81 ee       	ldi	r24, 0xE1	; 225
 1e0:	94 e0       	ldi	r25, 0x04	; 4
 1e2:	21 50       	subi	r18, 0x01	; 1
 1e4:	80 40       	sbci	r24, 0x00	; 0
 1e6:	90 40       	sbci	r25, 0x00	; 0
 1e8:	e1 f7       	brne	.-8      	; 0x1e2 <main+0x72>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <main+0x7c>
 1ec:	00 00       	nop
 1ee:	e0 cf       	rjmp	.-64     	; 0x1b0 <main+0x40>
			_delay_ms(100);
		}
		else if (poten <= 20)
 1f0:	20 e0       	ldi	r18, 0x00	; 0
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	40 ea       	ldi	r20, 0xA0	; 160
 1f6:	51 e4       	ldi	r21, 0x41	; 65
 1f8:	c7 01       	movw	r24, r14
 1fa:	b6 01       	movw	r22, r12
 1fc:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <__cmpsf2>
 200:	18 16       	cp	r1, r24
 202:	b4 f2       	brlt	.-84     	; 0x1b0 <main+0x40>
		{
			OCR1A = 97;	//0 degree
 204:	b9 82       	std	Y+1, r11	; 0x01
 206:	a8 82       	st	Y, r10
 208:	2f ef       	ldi	r18, 0xFF	; 255
 20a:	81 ee       	ldi	r24, 0xE1	; 225
 20c:	94 e0       	ldi	r25, 0x04	; 4
 20e:	21 50       	subi	r18, 0x01	; 1
 210:	80 40       	sbci	r24, 0x00	; 0
 212:	90 40       	sbci	r25, 0x00	; 0
 214:	e1 f7       	brne	.-8      	; 0x20e <main+0x9e>
 216:	00 c0       	rjmp	.+0      	; 0x218 <main+0xa8>
 218:	00 00       	nop
 21a:	ca cf       	rjmp	.-108    	; 0x1b0 <main+0x40>

0000021c <__subsf3>:
 21c:	50 58       	subi	r21, 0x80	; 128

0000021e <__addsf3>:
 21e:	bb 27       	eor	r27, r27
 220:	aa 27       	eor	r26, r26
 222:	0e 94 26 01 	call	0x24c	; 0x24c <__addsf3x>
 226:	0c 94 f8 01 	jmp	0x3f0	; 0x3f0 <__fp_round>
 22a:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__fp_pscA>
 22e:	38 f0       	brcs	.+14     	; 0x23e <__addsf3+0x20>
 230:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fp_pscB>
 234:	20 f0       	brcs	.+8      	; 0x23e <__addsf3+0x20>
 236:	39 f4       	brne	.+14     	; 0x246 <__addsf3+0x28>
 238:	9f 3f       	cpi	r25, 0xFF	; 255
 23a:	19 f4       	brne	.+6      	; 0x242 <__addsf3+0x24>
 23c:	26 f4       	brtc	.+8      	; 0x246 <__addsf3+0x28>
 23e:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__fp_nan>
 242:	0e f4       	brtc	.+2      	; 0x246 <__addsf3+0x28>
 244:	e0 95       	com	r30
 246:	e7 fb       	bst	r30, 7
 248:	0c 94 e1 01 	jmp	0x3c2	; 0x3c2 <__fp_inf>

0000024c <__addsf3x>:
 24c:	e9 2f       	mov	r30, r25
 24e:	0e 94 09 02 	call	0x412	; 0x412 <__fp_split3>
 252:	58 f3       	brcs	.-42     	; 0x22a <__addsf3+0xc>
 254:	ba 17       	cp	r27, r26
 256:	62 07       	cpc	r22, r18
 258:	73 07       	cpc	r23, r19
 25a:	84 07       	cpc	r24, r20
 25c:	95 07       	cpc	r25, r21
 25e:	20 f0       	brcs	.+8      	; 0x268 <__addsf3x+0x1c>
 260:	79 f4       	brne	.+30     	; 0x280 <__addsf3x+0x34>
 262:	a6 f5       	brtc	.+104    	; 0x2cc <__addsf3x+0x80>
 264:	0c 94 2b 02 	jmp	0x456	; 0x456 <__fp_zero>
 268:	0e f4       	brtc	.+2      	; 0x26c <__addsf3x+0x20>
 26a:	e0 95       	com	r30
 26c:	0b 2e       	mov	r0, r27
 26e:	ba 2f       	mov	r27, r26
 270:	a0 2d       	mov	r26, r0
 272:	0b 01       	movw	r0, r22
 274:	b9 01       	movw	r22, r18
 276:	90 01       	movw	r18, r0
 278:	0c 01       	movw	r0, r24
 27a:	ca 01       	movw	r24, r20
 27c:	a0 01       	movw	r20, r0
 27e:	11 24       	eor	r1, r1
 280:	ff 27       	eor	r31, r31
 282:	59 1b       	sub	r21, r25
 284:	99 f0       	breq	.+38     	; 0x2ac <__addsf3x+0x60>
 286:	59 3f       	cpi	r21, 0xF9	; 249
 288:	50 f4       	brcc	.+20     	; 0x29e <__addsf3x+0x52>
 28a:	50 3e       	cpi	r21, 0xE0	; 224
 28c:	68 f1       	brcs	.+90     	; 0x2e8 <__addsf3x+0x9c>
 28e:	1a 16       	cp	r1, r26
 290:	f0 40       	sbci	r31, 0x00	; 0
 292:	a2 2f       	mov	r26, r18
 294:	23 2f       	mov	r18, r19
 296:	34 2f       	mov	r19, r20
 298:	44 27       	eor	r20, r20
 29a:	58 5f       	subi	r21, 0xF8	; 248
 29c:	f3 cf       	rjmp	.-26     	; 0x284 <__addsf3x+0x38>
 29e:	46 95       	lsr	r20
 2a0:	37 95       	ror	r19
 2a2:	27 95       	ror	r18
 2a4:	a7 95       	ror	r26
 2a6:	f0 40       	sbci	r31, 0x00	; 0
 2a8:	53 95       	inc	r21
 2aa:	c9 f7       	brne	.-14     	; 0x29e <__addsf3x+0x52>
 2ac:	7e f4       	brtc	.+30     	; 0x2cc <__addsf3x+0x80>
 2ae:	1f 16       	cp	r1, r31
 2b0:	ba 0b       	sbc	r27, r26
 2b2:	62 0b       	sbc	r22, r18
 2b4:	73 0b       	sbc	r23, r19
 2b6:	84 0b       	sbc	r24, r20
 2b8:	ba f0       	brmi	.+46     	; 0x2e8 <__addsf3x+0x9c>
 2ba:	91 50       	subi	r25, 0x01	; 1
 2bc:	a1 f0       	breq	.+40     	; 0x2e6 <__addsf3x+0x9a>
 2be:	ff 0f       	add	r31, r31
 2c0:	bb 1f       	adc	r27, r27
 2c2:	66 1f       	adc	r22, r22
 2c4:	77 1f       	adc	r23, r23
 2c6:	88 1f       	adc	r24, r24
 2c8:	c2 f7       	brpl	.-16     	; 0x2ba <__addsf3x+0x6e>
 2ca:	0e c0       	rjmp	.+28     	; 0x2e8 <__addsf3x+0x9c>
 2cc:	ba 0f       	add	r27, r26
 2ce:	62 1f       	adc	r22, r18
 2d0:	73 1f       	adc	r23, r19
 2d2:	84 1f       	adc	r24, r20
 2d4:	48 f4       	brcc	.+18     	; 0x2e8 <__addsf3x+0x9c>
 2d6:	87 95       	ror	r24
 2d8:	77 95       	ror	r23
 2da:	67 95       	ror	r22
 2dc:	b7 95       	ror	r27
 2de:	f7 95       	ror	r31
 2e0:	9e 3f       	cpi	r25, 0xFE	; 254
 2e2:	08 f0       	brcs	.+2      	; 0x2e6 <__addsf3x+0x9a>
 2e4:	b0 cf       	rjmp	.-160    	; 0x246 <__addsf3+0x28>
 2e6:	93 95       	inc	r25
 2e8:	88 0f       	add	r24, r24
 2ea:	08 f0       	brcs	.+2      	; 0x2ee <__addsf3x+0xa2>
 2ec:	99 27       	eor	r25, r25
 2ee:	ee 0f       	add	r30, r30
 2f0:	97 95       	ror	r25
 2f2:	87 95       	ror	r24
 2f4:	08 95       	ret

000002f6 <__cmpsf2>:
 2f6:	0e 94 bd 01 	call	0x37a	; 0x37a <__fp_cmp>
 2fa:	08 f4       	brcc	.+2      	; 0x2fe <__cmpsf2+0x8>
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	08 95       	ret

00000300 <__floatunsisf>:
 300:	e8 94       	clt
 302:	09 c0       	rjmp	.+18     	; 0x316 <__floatsisf+0x12>

00000304 <__floatsisf>:
 304:	97 fb       	bst	r25, 7
 306:	3e f4       	brtc	.+14     	; 0x316 <__floatsisf+0x12>
 308:	90 95       	com	r25
 30a:	80 95       	com	r24
 30c:	70 95       	com	r23
 30e:	61 95       	neg	r22
 310:	7f 4f       	sbci	r23, 0xFF	; 255
 312:	8f 4f       	sbci	r24, 0xFF	; 255
 314:	9f 4f       	sbci	r25, 0xFF	; 255
 316:	99 23       	and	r25, r25
 318:	a9 f0       	breq	.+42     	; 0x344 <__floatsisf+0x40>
 31a:	f9 2f       	mov	r31, r25
 31c:	96 e9       	ldi	r25, 0x96	; 150
 31e:	bb 27       	eor	r27, r27
 320:	93 95       	inc	r25
 322:	f6 95       	lsr	r31
 324:	87 95       	ror	r24
 326:	77 95       	ror	r23
 328:	67 95       	ror	r22
 32a:	b7 95       	ror	r27
 32c:	f1 11       	cpse	r31, r1
 32e:	f8 cf       	rjmp	.-16     	; 0x320 <__floatsisf+0x1c>
 330:	fa f4       	brpl	.+62     	; 0x370 <__floatsisf+0x6c>
 332:	bb 0f       	add	r27, r27
 334:	11 f4       	brne	.+4      	; 0x33a <__floatsisf+0x36>
 336:	60 ff       	sbrs	r22, 0
 338:	1b c0       	rjmp	.+54     	; 0x370 <__floatsisf+0x6c>
 33a:	6f 5f       	subi	r22, 0xFF	; 255
 33c:	7f 4f       	sbci	r23, 0xFF	; 255
 33e:	8f 4f       	sbci	r24, 0xFF	; 255
 340:	9f 4f       	sbci	r25, 0xFF	; 255
 342:	16 c0       	rjmp	.+44     	; 0x370 <__floatsisf+0x6c>
 344:	88 23       	and	r24, r24
 346:	11 f0       	breq	.+4      	; 0x34c <__floatsisf+0x48>
 348:	96 e9       	ldi	r25, 0x96	; 150
 34a:	11 c0       	rjmp	.+34     	; 0x36e <__floatsisf+0x6a>
 34c:	77 23       	and	r23, r23
 34e:	21 f0       	breq	.+8      	; 0x358 <__floatsisf+0x54>
 350:	9e e8       	ldi	r25, 0x8E	; 142
 352:	87 2f       	mov	r24, r23
 354:	76 2f       	mov	r23, r22
 356:	05 c0       	rjmp	.+10     	; 0x362 <__floatsisf+0x5e>
 358:	66 23       	and	r22, r22
 35a:	71 f0       	breq	.+28     	; 0x378 <__floatsisf+0x74>
 35c:	96 e8       	ldi	r25, 0x86	; 134
 35e:	86 2f       	mov	r24, r22
 360:	70 e0       	ldi	r23, 0x00	; 0
 362:	60 e0       	ldi	r22, 0x00	; 0
 364:	2a f0       	brmi	.+10     	; 0x370 <__floatsisf+0x6c>
 366:	9a 95       	dec	r25
 368:	66 0f       	add	r22, r22
 36a:	77 1f       	adc	r23, r23
 36c:	88 1f       	adc	r24, r24
 36e:	da f7       	brpl	.-10     	; 0x366 <__floatsisf+0x62>
 370:	88 0f       	add	r24, r24
 372:	96 95       	lsr	r25
 374:	87 95       	ror	r24
 376:	97 f9       	bld	r25, 7
 378:	08 95       	ret

0000037a <__fp_cmp>:
 37a:	99 0f       	add	r25, r25
 37c:	00 08       	sbc	r0, r0
 37e:	55 0f       	add	r21, r21
 380:	aa 0b       	sbc	r26, r26
 382:	e0 e8       	ldi	r30, 0x80	; 128
 384:	fe ef       	ldi	r31, 0xFE	; 254
 386:	16 16       	cp	r1, r22
 388:	17 06       	cpc	r1, r23
 38a:	e8 07       	cpc	r30, r24
 38c:	f9 07       	cpc	r31, r25
 38e:	c0 f0       	brcs	.+48     	; 0x3c0 <__fp_cmp+0x46>
 390:	12 16       	cp	r1, r18
 392:	13 06       	cpc	r1, r19
 394:	e4 07       	cpc	r30, r20
 396:	f5 07       	cpc	r31, r21
 398:	98 f0       	brcs	.+38     	; 0x3c0 <__fp_cmp+0x46>
 39a:	62 1b       	sub	r22, r18
 39c:	73 0b       	sbc	r23, r19
 39e:	84 0b       	sbc	r24, r20
 3a0:	95 0b       	sbc	r25, r21
 3a2:	39 f4       	brne	.+14     	; 0x3b2 <__fp_cmp+0x38>
 3a4:	0a 26       	eor	r0, r26
 3a6:	61 f0       	breq	.+24     	; 0x3c0 <__fp_cmp+0x46>
 3a8:	23 2b       	or	r18, r19
 3aa:	24 2b       	or	r18, r20
 3ac:	25 2b       	or	r18, r21
 3ae:	21 f4       	brne	.+8      	; 0x3b8 <__fp_cmp+0x3e>
 3b0:	08 95       	ret
 3b2:	0a 26       	eor	r0, r26
 3b4:	09 f4       	brne	.+2      	; 0x3b8 <__fp_cmp+0x3e>
 3b6:	a1 40       	sbci	r26, 0x01	; 1
 3b8:	a6 95       	lsr	r26
 3ba:	8f ef       	ldi	r24, 0xFF	; 255
 3bc:	81 1d       	adc	r24, r1
 3be:	81 1d       	adc	r24, r1
 3c0:	08 95       	ret

000003c2 <__fp_inf>:
 3c2:	97 f9       	bld	r25, 7
 3c4:	9f 67       	ori	r25, 0x7F	; 127
 3c6:	80 e8       	ldi	r24, 0x80	; 128
 3c8:	70 e0       	ldi	r23, 0x00	; 0
 3ca:	60 e0       	ldi	r22, 0x00	; 0
 3cc:	08 95       	ret

000003ce <__fp_nan>:
 3ce:	9f ef       	ldi	r25, 0xFF	; 255
 3d0:	80 ec       	ldi	r24, 0xC0	; 192
 3d2:	08 95       	ret

000003d4 <__fp_pscA>:
 3d4:	00 24       	eor	r0, r0
 3d6:	0a 94       	dec	r0
 3d8:	16 16       	cp	r1, r22
 3da:	17 06       	cpc	r1, r23
 3dc:	18 06       	cpc	r1, r24
 3de:	09 06       	cpc	r0, r25
 3e0:	08 95       	ret

000003e2 <__fp_pscB>:
 3e2:	00 24       	eor	r0, r0
 3e4:	0a 94       	dec	r0
 3e6:	12 16       	cp	r1, r18
 3e8:	13 06       	cpc	r1, r19
 3ea:	14 06       	cpc	r1, r20
 3ec:	05 06       	cpc	r0, r21
 3ee:	08 95       	ret

000003f0 <__fp_round>:
 3f0:	09 2e       	mov	r0, r25
 3f2:	03 94       	inc	r0
 3f4:	00 0c       	add	r0, r0
 3f6:	11 f4       	brne	.+4      	; 0x3fc <__fp_round+0xc>
 3f8:	88 23       	and	r24, r24
 3fa:	52 f0       	brmi	.+20     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3fc:	bb 0f       	add	r27, r27
 3fe:	40 f4       	brcc	.+16     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 400:	bf 2b       	or	r27, r31
 402:	11 f4       	brne	.+4      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 404:	60 ff       	sbrs	r22, 0
 406:	04 c0       	rjmp	.+8      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 408:	6f 5f       	subi	r22, 0xFF	; 255
 40a:	7f 4f       	sbci	r23, 0xFF	; 255
 40c:	8f 4f       	sbci	r24, 0xFF	; 255
 40e:	9f 4f       	sbci	r25, 0xFF	; 255
 410:	08 95       	ret

00000412 <__fp_split3>:
 412:	57 fd       	sbrc	r21, 7
 414:	90 58       	subi	r25, 0x80	; 128
 416:	44 0f       	add	r20, r20
 418:	55 1f       	adc	r21, r21
 41a:	59 f0       	breq	.+22     	; 0x432 <__fp_splitA+0x10>
 41c:	5f 3f       	cpi	r21, 0xFF	; 255
 41e:	71 f0       	breq	.+28     	; 0x43c <__fp_splitA+0x1a>
 420:	47 95       	ror	r20

00000422 <__fp_splitA>:
 422:	88 0f       	add	r24, r24
 424:	97 fb       	bst	r25, 7
 426:	99 1f       	adc	r25, r25
 428:	61 f0       	breq	.+24     	; 0x442 <__fp_splitA+0x20>
 42a:	9f 3f       	cpi	r25, 0xFF	; 255
 42c:	79 f0       	breq	.+30     	; 0x44c <__fp_splitA+0x2a>
 42e:	87 95       	ror	r24
 430:	08 95       	ret
 432:	12 16       	cp	r1, r18
 434:	13 06       	cpc	r1, r19
 436:	14 06       	cpc	r1, r20
 438:	55 1f       	adc	r21, r21
 43a:	f2 cf       	rjmp	.-28     	; 0x420 <__fp_split3+0xe>
 43c:	46 95       	lsr	r20
 43e:	f1 df       	rcall	.-30     	; 0x422 <__fp_splitA>
 440:	08 c0       	rjmp	.+16     	; 0x452 <__fp_splitA+0x30>
 442:	16 16       	cp	r1, r22
 444:	17 06       	cpc	r1, r23
 446:	18 06       	cpc	r1, r24
 448:	99 1f       	adc	r25, r25
 44a:	f1 cf       	rjmp	.-30     	; 0x42e <__fp_splitA+0xc>
 44c:	86 95       	lsr	r24
 44e:	71 05       	cpc	r23, r1
 450:	61 05       	cpc	r22, r1
 452:	08 94       	sec
 454:	08 95       	ret

00000456 <__fp_zero>:
 456:	e8 94       	clt

00000458 <__fp_szero>:
 458:	bb 27       	eor	r27, r27
 45a:	66 27       	eor	r22, r22
 45c:	77 27       	eor	r23, r23
 45e:	cb 01       	movw	r24, r22
 460:	97 f9       	bld	r25, 7
 462:	08 95       	ret

00000464 <__gesf2>:
 464:	0e 94 bd 01 	call	0x37a	; 0x37a <__fp_cmp>
 468:	08 f4       	brcc	.+2      	; 0x46c <__gesf2+0x8>
 46a:	8f ef       	ldi	r24, 0xFF	; 255
 46c:	08 95       	ret

0000046e <__mulsf3>:
 46e:	0e 94 4a 02 	call	0x494	; 0x494 <__mulsf3x>
 472:	0c 94 f8 01 	jmp	0x3f0	; 0x3f0 <__fp_round>
 476:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__fp_pscA>
 47a:	38 f0       	brcs	.+14     	; 0x48a <__mulsf3+0x1c>
 47c:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fp_pscB>
 480:	20 f0       	brcs	.+8      	; 0x48a <__mulsf3+0x1c>
 482:	95 23       	and	r25, r21
 484:	11 f0       	breq	.+4      	; 0x48a <__mulsf3+0x1c>
 486:	0c 94 e1 01 	jmp	0x3c2	; 0x3c2 <__fp_inf>
 48a:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__fp_nan>
 48e:	11 24       	eor	r1, r1
 490:	0c 94 2c 02 	jmp	0x458	; 0x458 <__fp_szero>

00000494 <__mulsf3x>:
 494:	0e 94 09 02 	call	0x412	; 0x412 <__fp_split3>
 498:	70 f3       	brcs	.-36     	; 0x476 <__mulsf3+0x8>

0000049a <__mulsf3_pse>:
 49a:	95 9f       	mul	r25, r21
 49c:	c1 f3       	breq	.-16     	; 0x48e <__mulsf3+0x20>
 49e:	95 0f       	add	r25, r21
 4a0:	50 e0       	ldi	r21, 0x00	; 0
 4a2:	55 1f       	adc	r21, r21
 4a4:	62 9f       	mul	r22, r18
 4a6:	f0 01       	movw	r30, r0
 4a8:	72 9f       	mul	r23, r18
 4aa:	bb 27       	eor	r27, r27
 4ac:	f0 0d       	add	r31, r0
 4ae:	b1 1d       	adc	r27, r1
 4b0:	63 9f       	mul	r22, r19
 4b2:	aa 27       	eor	r26, r26
 4b4:	f0 0d       	add	r31, r0
 4b6:	b1 1d       	adc	r27, r1
 4b8:	aa 1f       	adc	r26, r26
 4ba:	64 9f       	mul	r22, r20
 4bc:	66 27       	eor	r22, r22
 4be:	b0 0d       	add	r27, r0
 4c0:	a1 1d       	adc	r26, r1
 4c2:	66 1f       	adc	r22, r22
 4c4:	82 9f       	mul	r24, r18
 4c6:	22 27       	eor	r18, r18
 4c8:	b0 0d       	add	r27, r0
 4ca:	a1 1d       	adc	r26, r1
 4cc:	62 1f       	adc	r22, r18
 4ce:	73 9f       	mul	r23, r19
 4d0:	b0 0d       	add	r27, r0
 4d2:	a1 1d       	adc	r26, r1
 4d4:	62 1f       	adc	r22, r18
 4d6:	83 9f       	mul	r24, r19
 4d8:	a0 0d       	add	r26, r0
 4da:	61 1d       	adc	r22, r1
 4dc:	22 1f       	adc	r18, r18
 4de:	74 9f       	mul	r23, r20
 4e0:	33 27       	eor	r19, r19
 4e2:	a0 0d       	add	r26, r0
 4e4:	61 1d       	adc	r22, r1
 4e6:	23 1f       	adc	r18, r19
 4e8:	84 9f       	mul	r24, r20
 4ea:	60 0d       	add	r22, r0
 4ec:	21 1d       	adc	r18, r1
 4ee:	82 2f       	mov	r24, r18
 4f0:	76 2f       	mov	r23, r22
 4f2:	6a 2f       	mov	r22, r26
 4f4:	11 24       	eor	r1, r1
 4f6:	9f 57       	subi	r25, 0x7F	; 127
 4f8:	50 40       	sbci	r21, 0x00	; 0
 4fa:	9a f0       	brmi	.+38     	; 0x522 <__mulsf3_pse+0x88>
 4fc:	f1 f0       	breq	.+60     	; 0x53a <__mulsf3_pse+0xa0>
 4fe:	88 23       	and	r24, r24
 500:	4a f0       	brmi	.+18     	; 0x514 <__mulsf3_pse+0x7a>
 502:	ee 0f       	add	r30, r30
 504:	ff 1f       	adc	r31, r31
 506:	bb 1f       	adc	r27, r27
 508:	66 1f       	adc	r22, r22
 50a:	77 1f       	adc	r23, r23
 50c:	88 1f       	adc	r24, r24
 50e:	91 50       	subi	r25, 0x01	; 1
 510:	50 40       	sbci	r21, 0x00	; 0
 512:	a9 f7       	brne	.-22     	; 0x4fe <__mulsf3_pse+0x64>
 514:	9e 3f       	cpi	r25, 0xFE	; 254
 516:	51 05       	cpc	r21, r1
 518:	80 f0       	brcs	.+32     	; 0x53a <__mulsf3_pse+0xa0>
 51a:	0c 94 e1 01 	jmp	0x3c2	; 0x3c2 <__fp_inf>
 51e:	0c 94 2c 02 	jmp	0x458	; 0x458 <__fp_szero>
 522:	5f 3f       	cpi	r21, 0xFF	; 255
 524:	e4 f3       	brlt	.-8      	; 0x51e <__mulsf3_pse+0x84>
 526:	98 3e       	cpi	r25, 0xE8	; 232
 528:	d4 f3       	brlt	.-12     	; 0x51e <__mulsf3_pse+0x84>
 52a:	86 95       	lsr	r24
 52c:	77 95       	ror	r23
 52e:	67 95       	ror	r22
 530:	b7 95       	ror	r27
 532:	f7 95       	ror	r31
 534:	e7 95       	ror	r30
 536:	9f 5f       	subi	r25, 0xFF	; 255
 538:	c1 f7       	brne	.-16     	; 0x52a <__mulsf3_pse+0x90>
 53a:	fe 2b       	or	r31, r30
 53c:	88 0f       	add	r24, r24
 53e:	91 1d       	adc	r25, r1
 540:	96 95       	lsr	r25
 542:	87 95       	ror	r24
 544:	97 f9       	bld	r25, 7
 546:	08 95       	ret

00000548 <_exit>:
 548:	f8 94       	cli

0000054a <__stop_program>:
 54a:	ff cf       	rjmp	.-2      	; 0x54a <__stop_program>
