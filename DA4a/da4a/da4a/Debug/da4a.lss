
da4a.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000005ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000576  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000005ca  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005fc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  0000063c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000aaf  00000000  00000000  00000664  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000962  00000000  00000000  00001113  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000037b  00000000  00000000  00001a75  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000048  00000000  00000000  00001df0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004b4  00000000  00000000  00001e38  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000121  00000000  00000000  000022ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  0000240d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  10:	0c 94 dd 00 	jmp	0x1ba	; 0x1ba <__vector_4>
  14:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  18:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  1c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  20:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  24:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  28:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  2c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  30:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  34:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  38:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  3c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  40:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  44:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  48:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  4c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  50:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  54:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  58:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  5c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  60:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  64:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  68:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  6c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  70:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  74:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  78:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  7c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  80:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  84:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  88:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  8c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  90:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  94:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  98:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  9c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  ac:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  b0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	0e 94 66 00 	call	0xcc	; 0xcc <main>
  c4:	0c 94 b9 02 	jmp	0x572	; 0x572 <_exit>

000000c8 <__bad_interrupt>:
  c8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000cc <main>:
int main()
{
	float poten;
	
	//the ADC setup
	ADMUX = (1<<REFS0) | (1<<ADLAR);
  cc:	80 e6       	ldi	r24, 0x60	; 96
  ce:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
		/*
		Reference selection bits,
		AVcc external cap at AREF,
		left-adjusted,
		ADC5 channel selected*/
	ADCSRA=(1<<ADEN)|(1<<ADPS2)|(0<<ADPS1)|(1<<ADPS0);
  d2:	85 e8       	ldi	r24, 0x85	; 133
  d4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
		auto trigger enabled,
		interrupt flag initialized and disabled,
		prescaler: 101*/
	
	//the pin setup
	DDRC  |=  ~(1<<3);			//PC3 is an input
  d8:	87 b1       	in	r24, 0x07	; 7
  da:	87 6f       	ori	r24, 0xF7	; 247
  dc:	87 b9       	out	0x07, r24	; 7
	PORTC |=  (1<<3) | (1<<0);	//Activate Pull- up resistor PC0 & 3
  de:	88 b1       	in	r24, 0x08	; 8
  e0:	89 60       	ori	r24, 0x09	; 9
  e2:	88 b9       	out	0x08, r24	; 8
	DDRD  |=  (1<<DDD6);		//PD6 is an output for OCR0A
  e4:	56 9a       	sbi	0x0a, 6	; 10
	
	//the interrupt setup
	PCICR = (1<<PCIE1);		//Pin change interrupt control register
  e6:	82 e0       	ldi	r24, 0x02	; 2
  e8:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__DATA_REGION_ORIGIN__+0x8>
	PCMSK1 = (1<<PCINT11);	//Mask register is enabled for for the input
  ec:	88 e0       	ldi	r24, 0x08	; 8
  ee:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__DATA_REGION_ORIGIN__+0xc>
	sei ();					//the interrupt is enabled.
  f2:	78 94       	sei
	
	//the pulse Width Modulation setup
	TCCR0A |= (1<<COM0A1)|(0<<COM0A0)|(1<<WGM00)|(0<<WGM01);	//Clear OC0A, CPC PWM, phase correct with top as OCR0A
  f4:	84 b5       	in	r24, 0x24	; 36
  f6:	81 68       	ori	r24, 0x81	; 129
  f8:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (0<<WGM02)|(1<<CS00);								//Pre-scaling is 1
  fa:	85 b5       	in	r24, 0x25	; 37
  fc:	81 60       	ori	r24, 0x01	; 1
  fe:	85 bd       	out	0x25, r24	; 37
	OCR0A = 0;													//the top value is initialized
 100:	17 bc       	out	0x27, r1	; 39
	
	while (1)
	{
		//reading the ADC value 
		ADCSRA |= (1<<ADSC);
 102:	ca e7       	ldi	r28, 0x7A	; 122
 104:	d0 e0       	ldi	r29, 0x00	; 0
		while(ADCSRA & (1<<ADSC));
		poten = ADC;
 106:	08 e7       	ldi	r16, 0x78	; 120
 108:	10 e0       	ldi	r17, 0x00	; 0
		//95% is 65535 * 0.95 = 62258.25 = 62258(less than 95%)
		if (poten >= 62258)
		{
			/*the DC cycle calculation
			OCR0A = 95% * 0xFF(256) - 1 = 242*/
			OCR0A = 242; //top = 242, which is a max
 10a:	0f 2e       	mov	r0, r31
 10c:	f2 ef       	ldi	r31, 0xF2	; 242
 10e:	bf 2e       	mov	r11, r31
 110:	f0 2d       	mov	r31, r0
	OCR0A = 0;													//the top value is initialized
	
	while (1)
	{
		//reading the ADC value 
		ADCSRA |= (1<<ADSC);
 112:	88 81       	ld	r24, Y
 114:	80 64       	ori	r24, 0x40	; 64
 116:	88 83       	st	Y, r24
		while(ADCSRA & (1<<ADSC));
 118:	88 81       	ld	r24, Y
 11a:	86 fd       	sbrc	r24, 6
 11c:	fd cf       	rjmp	.-6      	; 0x118 <main+0x4c>
		poten = ADC;
 11e:	f8 01       	movw	r30, r16
 120:	60 81       	ld	r22, Z
 122:	71 81       	ldd	r23, Z+1	; 0x01
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	0e 94 95 01 	call	0x32a	; 0x32a <__floatunsisf>
 12c:	6b 01       	movw	r12, r22
 12e:	7c 01       	movw	r14, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 130:	8f e3       	ldi	r24, 0x3F	; 63
 132:	9c e9       	ldi	r25, 0x9C	; 156
 134:	01 97       	sbiw	r24, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <main+0x68>
 138:	00 c0       	rjmp	.+0      	; 0x13a <main+0x6e>
 13a:	00 00       	nop
		
		_delay_ms(10);	//had an error if not included
		
		//16 bit max = 0xFFFF = 65535
		//95% is 65535 * 0.95 = 62258.25 = 62258(less than 95%)
		if (poten >= 62258)
 13c:	20 e0       	ldi	r18, 0x00	; 0
 13e:	32 e3       	ldi	r19, 0x32	; 50
 140:	43 e7       	ldi	r20, 0x73	; 115
 142:	57 e4       	ldi	r21, 0x47	; 71
 144:	c7 01       	movw	r24, r14
 146:	b6 01       	movw	r22, r12
 148:	0e 94 47 02 	call	0x48e	; 0x48e <__gesf2>
 14c:	88 23       	and	r24, r24
 14e:	44 f0       	brlt	.+16     	; 0x160 <main+0x94>
		{
			/*the DC cycle calculation
			OCR0A = 95% * 0xFF(256) - 1 = 242*/
			OCR0A = 242; //top = 242, which is a max
 150:	b7 bc       	out	0x27, r11	; 39
 152:	ef e3       	ldi	r30, 0x3F	; 63
 154:	fc e9       	ldi	r31, 0x9C	; 156
 156:	31 97       	sbiw	r30, 0x01	; 1
 158:	f1 f7       	brne	.-4      	; 0x156 <main+0x8a>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <main+0x90>
 15c:	00 00       	nop
 15e:	d9 cf       	rjmp	.-78     	; 0x112 <main+0x46>
			_delay_ms(10); //somewhat bearable latency
		}
		else if ((poten <= 62257) && (poten > 0))
 160:	20 e0       	ldi	r18, 0x00	; 0
 162:	31 e3       	ldi	r19, 0x31	; 49
 164:	43 e7       	ldi	r20, 0x73	; 115
 166:	57 e4       	ldi	r21, 0x47	; 71
 168:	c7 01       	movw	r24, r14
 16a:	b6 01       	movw	r22, r12
 16c:	0e 94 ef 00 	call	0x1de	; 0x1de <__cmpsf2>
 170:	18 16       	cp	r1, r24
 172:	0c f1       	brlt	.+66     	; 0x1b6 <main+0xea>
 174:	20 e0       	ldi	r18, 0x00	; 0
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	a9 01       	movw	r20, r18
 17a:	c7 01       	movw	r24, r14
 17c:	b6 01       	movw	r22, r12
 17e:	0e 94 47 02 	call	0x48e	; 0x48e <__gesf2>
 182:	18 16       	cp	r1, r24
 184:	c4 f4       	brge	.+48     	; 0x1b6 <main+0xea>
		{
			//the speed control
			OCR0A = 241* (poten / 62257);
 186:	20 e0       	ldi	r18, 0x00	; 0
 188:	31 e3       	ldi	r19, 0x31	; 49
 18a:	43 e7       	ldi	r20, 0x73	; 115
 18c:	57 e4       	ldi	r21, 0x47	; 71
 18e:	c7 01       	movw	r24, r14
 190:	b6 01       	movw	r22, r12
 192:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__divsf3>
 196:	20 e0       	ldi	r18, 0x00	; 0
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	41 e7       	ldi	r20, 0x71	; 113
 19c:	53 e4       	ldi	r21, 0x43	; 67
 19e:	0e 94 4c 02 	call	0x498	; 0x498 <__mulsf3>
 1a2:	0e 94 66 01 	call	0x2cc	; 0x2cc <__fixunssfsi>
 1a6:	67 bd       	out	0x27, r22	; 39
 1a8:	8f e3       	ldi	r24, 0x3F	; 63
 1aa:	9c e9       	ldi	r25, 0x9C	; 156
 1ac:	01 97       	sbiw	r24, 0x01	; 1
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <main+0xe0>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <main+0xe6>
 1b2:	00 00       	nop
 1b4:	ae cf       	rjmp	.-164    	; 0x112 <main+0x46>
			_delay_ms(10);
		}
		else
		OCR0A = 0;
 1b6:	17 bc       	out	0x27, r1	; 39
 1b8:	ac cf       	rjmp	.-168    	; 0x112 <main+0x46>

000001ba <__vector_4>:
	}
}

ISR(PCINT1_vect)
{
 1ba:	1f 92       	push	r1
 1bc:	0f 92       	push	r0
 1be:	0f b6       	in	r0, 0x3f	; 63
 1c0:	0f 92       	push	r0
 1c2:	11 24       	eor	r1, r1
 1c4:	8f 93       	push	r24
 1c6:	9f 93       	push	r25
	PORTC ^= (1<<0);	//switch toggle
 1c8:	98 b1       	in	r25, 0x08	; 8
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	89 27       	eor	r24, r25
 1ce:	88 b9       	out	0x08, r24	; 8
}
 1d0:	9f 91       	pop	r25
 1d2:	8f 91       	pop	r24
 1d4:	0f 90       	pop	r0
 1d6:	0f be       	out	0x3f, r0	; 63
 1d8:	0f 90       	pop	r0
 1da:	1f 90       	pop	r1
 1dc:	18 95       	reti

000001de <__cmpsf2>:
 1de:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <__fp_cmp>
 1e2:	08 f4       	brcc	.+2      	; 0x1e6 <__cmpsf2+0x8>
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	08 95       	ret

000001e8 <__divsf3>:
 1e8:	0e 94 08 01 	call	0x210	; 0x210 <__divsf3x>
 1ec:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__fp_round>
 1f0:	0e 94 06 02 	call	0x40c	; 0x40c <__fp_pscB>
 1f4:	58 f0       	brcs	.+22     	; 0x20c <__divsf3+0x24>
 1f6:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__fp_pscA>
 1fa:	40 f0       	brcs	.+16     	; 0x20c <__divsf3+0x24>
 1fc:	29 f4       	brne	.+10     	; 0x208 <__divsf3+0x20>
 1fe:	5f 3f       	cpi	r21, 0xFF	; 255
 200:	29 f0       	breq	.+10     	; 0x20c <__divsf3+0x24>
 202:	0c 94 f6 01 	jmp	0x3ec	; 0x3ec <__fp_inf>
 206:	51 11       	cpse	r21, r1
 208:	0c 94 41 02 	jmp	0x482	; 0x482 <__fp_szero>
 20c:	0c 94 fc 01 	jmp	0x3f8	; 0x3f8 <__fp_nan>

00000210 <__divsf3x>:
 210:	0e 94 1e 02 	call	0x43c	; 0x43c <__fp_split3>
 214:	68 f3       	brcs	.-38     	; 0x1f0 <__divsf3+0x8>

00000216 <__divsf3_pse>:
 216:	99 23       	and	r25, r25
 218:	b1 f3       	breq	.-20     	; 0x206 <__divsf3+0x1e>
 21a:	55 23       	and	r21, r21
 21c:	91 f3       	breq	.-28     	; 0x202 <__divsf3+0x1a>
 21e:	95 1b       	sub	r25, r21
 220:	55 0b       	sbc	r21, r21
 222:	bb 27       	eor	r27, r27
 224:	aa 27       	eor	r26, r26
 226:	62 17       	cp	r22, r18
 228:	73 07       	cpc	r23, r19
 22a:	84 07       	cpc	r24, r20
 22c:	38 f0       	brcs	.+14     	; 0x23c <__divsf3_pse+0x26>
 22e:	9f 5f       	subi	r25, 0xFF	; 255
 230:	5f 4f       	sbci	r21, 0xFF	; 255
 232:	22 0f       	add	r18, r18
 234:	33 1f       	adc	r19, r19
 236:	44 1f       	adc	r20, r20
 238:	aa 1f       	adc	r26, r26
 23a:	a9 f3       	breq	.-22     	; 0x226 <__divsf3_pse+0x10>
 23c:	35 d0       	rcall	.+106    	; 0x2a8 <__divsf3_pse+0x92>
 23e:	0e 2e       	mov	r0, r30
 240:	3a f0       	brmi	.+14     	; 0x250 <__divsf3_pse+0x3a>
 242:	e0 e8       	ldi	r30, 0x80	; 128
 244:	32 d0       	rcall	.+100    	; 0x2aa <__divsf3_pse+0x94>
 246:	91 50       	subi	r25, 0x01	; 1
 248:	50 40       	sbci	r21, 0x00	; 0
 24a:	e6 95       	lsr	r30
 24c:	00 1c       	adc	r0, r0
 24e:	ca f7       	brpl	.-14     	; 0x242 <__divsf3_pse+0x2c>
 250:	2b d0       	rcall	.+86     	; 0x2a8 <__divsf3_pse+0x92>
 252:	fe 2f       	mov	r31, r30
 254:	29 d0       	rcall	.+82     	; 0x2a8 <__divsf3_pse+0x92>
 256:	66 0f       	add	r22, r22
 258:	77 1f       	adc	r23, r23
 25a:	88 1f       	adc	r24, r24
 25c:	bb 1f       	adc	r27, r27
 25e:	26 17       	cp	r18, r22
 260:	37 07       	cpc	r19, r23
 262:	48 07       	cpc	r20, r24
 264:	ab 07       	cpc	r26, r27
 266:	b0 e8       	ldi	r27, 0x80	; 128
 268:	09 f0       	breq	.+2      	; 0x26c <__divsf3_pse+0x56>
 26a:	bb 0b       	sbc	r27, r27
 26c:	80 2d       	mov	r24, r0
 26e:	bf 01       	movw	r22, r30
 270:	ff 27       	eor	r31, r31
 272:	93 58       	subi	r25, 0x83	; 131
 274:	5f 4f       	sbci	r21, 0xFF	; 255
 276:	3a f0       	brmi	.+14     	; 0x286 <__divsf3_pse+0x70>
 278:	9e 3f       	cpi	r25, 0xFE	; 254
 27a:	51 05       	cpc	r21, r1
 27c:	78 f0       	brcs	.+30     	; 0x29c <__divsf3_pse+0x86>
 27e:	0c 94 f6 01 	jmp	0x3ec	; 0x3ec <__fp_inf>
 282:	0c 94 41 02 	jmp	0x482	; 0x482 <__fp_szero>
 286:	5f 3f       	cpi	r21, 0xFF	; 255
 288:	e4 f3       	brlt	.-8      	; 0x282 <__divsf3_pse+0x6c>
 28a:	98 3e       	cpi	r25, 0xE8	; 232
 28c:	d4 f3       	brlt	.-12     	; 0x282 <__divsf3_pse+0x6c>
 28e:	86 95       	lsr	r24
 290:	77 95       	ror	r23
 292:	67 95       	ror	r22
 294:	b7 95       	ror	r27
 296:	f7 95       	ror	r31
 298:	9f 5f       	subi	r25, 0xFF	; 255
 29a:	c9 f7       	brne	.-14     	; 0x28e <__divsf3_pse+0x78>
 29c:	88 0f       	add	r24, r24
 29e:	91 1d       	adc	r25, r1
 2a0:	96 95       	lsr	r25
 2a2:	87 95       	ror	r24
 2a4:	97 f9       	bld	r25, 7
 2a6:	08 95       	ret
 2a8:	e1 e0       	ldi	r30, 0x01	; 1
 2aa:	66 0f       	add	r22, r22
 2ac:	77 1f       	adc	r23, r23
 2ae:	88 1f       	adc	r24, r24
 2b0:	bb 1f       	adc	r27, r27
 2b2:	62 17       	cp	r22, r18
 2b4:	73 07       	cpc	r23, r19
 2b6:	84 07       	cpc	r24, r20
 2b8:	ba 07       	cpc	r27, r26
 2ba:	20 f0       	brcs	.+8      	; 0x2c4 <__divsf3_pse+0xae>
 2bc:	62 1b       	sub	r22, r18
 2be:	73 0b       	sbc	r23, r19
 2c0:	84 0b       	sbc	r24, r20
 2c2:	ba 0b       	sbc	r27, r26
 2c4:	ee 1f       	adc	r30, r30
 2c6:	88 f7       	brcc	.-30     	; 0x2aa <__divsf3_pse+0x94>
 2c8:	e0 95       	com	r30
 2ca:	08 95       	ret

000002cc <__fixunssfsi>:
 2cc:	0e 94 26 02 	call	0x44c	; 0x44c <__fp_splitA>
 2d0:	88 f0       	brcs	.+34     	; 0x2f4 <__fixunssfsi+0x28>
 2d2:	9f 57       	subi	r25, 0x7F	; 127
 2d4:	98 f0       	brcs	.+38     	; 0x2fc <__fixunssfsi+0x30>
 2d6:	b9 2f       	mov	r27, r25
 2d8:	99 27       	eor	r25, r25
 2da:	b7 51       	subi	r27, 0x17	; 23
 2dc:	b0 f0       	brcs	.+44     	; 0x30a <__fixunssfsi+0x3e>
 2de:	e1 f0       	breq	.+56     	; 0x318 <__fixunssfsi+0x4c>
 2e0:	66 0f       	add	r22, r22
 2e2:	77 1f       	adc	r23, r23
 2e4:	88 1f       	adc	r24, r24
 2e6:	99 1f       	adc	r25, r25
 2e8:	1a f0       	brmi	.+6      	; 0x2f0 <__fixunssfsi+0x24>
 2ea:	ba 95       	dec	r27
 2ec:	c9 f7       	brne	.-14     	; 0x2e0 <__fixunssfsi+0x14>
 2ee:	14 c0       	rjmp	.+40     	; 0x318 <__fixunssfsi+0x4c>
 2f0:	b1 30       	cpi	r27, 0x01	; 1
 2f2:	91 f0       	breq	.+36     	; 0x318 <__fixunssfsi+0x4c>
 2f4:	0e 94 40 02 	call	0x480	; 0x480 <__fp_zero>
 2f8:	b1 e0       	ldi	r27, 0x01	; 1
 2fa:	08 95       	ret
 2fc:	0c 94 40 02 	jmp	0x480	; 0x480 <__fp_zero>
 300:	67 2f       	mov	r22, r23
 302:	78 2f       	mov	r23, r24
 304:	88 27       	eor	r24, r24
 306:	b8 5f       	subi	r27, 0xF8	; 248
 308:	39 f0       	breq	.+14     	; 0x318 <__fixunssfsi+0x4c>
 30a:	b9 3f       	cpi	r27, 0xF9	; 249
 30c:	cc f3       	brlt	.-14     	; 0x300 <__fixunssfsi+0x34>
 30e:	86 95       	lsr	r24
 310:	77 95       	ror	r23
 312:	67 95       	ror	r22
 314:	b3 95       	inc	r27
 316:	d9 f7       	brne	.-10     	; 0x30e <__fixunssfsi+0x42>
 318:	3e f4       	brtc	.+14     	; 0x328 <__fixunssfsi+0x5c>
 31a:	90 95       	com	r25
 31c:	80 95       	com	r24
 31e:	70 95       	com	r23
 320:	61 95       	neg	r22
 322:	7f 4f       	sbci	r23, 0xFF	; 255
 324:	8f 4f       	sbci	r24, 0xFF	; 255
 326:	9f 4f       	sbci	r25, 0xFF	; 255
 328:	08 95       	ret

0000032a <__floatunsisf>:
 32a:	e8 94       	clt
 32c:	09 c0       	rjmp	.+18     	; 0x340 <__floatsisf+0x12>

0000032e <__floatsisf>:
 32e:	97 fb       	bst	r25, 7
 330:	3e f4       	brtc	.+14     	; 0x340 <__floatsisf+0x12>
 332:	90 95       	com	r25
 334:	80 95       	com	r24
 336:	70 95       	com	r23
 338:	61 95       	neg	r22
 33a:	7f 4f       	sbci	r23, 0xFF	; 255
 33c:	8f 4f       	sbci	r24, 0xFF	; 255
 33e:	9f 4f       	sbci	r25, 0xFF	; 255
 340:	99 23       	and	r25, r25
 342:	a9 f0       	breq	.+42     	; 0x36e <__floatsisf+0x40>
 344:	f9 2f       	mov	r31, r25
 346:	96 e9       	ldi	r25, 0x96	; 150
 348:	bb 27       	eor	r27, r27
 34a:	93 95       	inc	r25
 34c:	f6 95       	lsr	r31
 34e:	87 95       	ror	r24
 350:	77 95       	ror	r23
 352:	67 95       	ror	r22
 354:	b7 95       	ror	r27
 356:	f1 11       	cpse	r31, r1
 358:	f8 cf       	rjmp	.-16     	; 0x34a <__floatsisf+0x1c>
 35a:	fa f4       	brpl	.+62     	; 0x39a <__floatsisf+0x6c>
 35c:	bb 0f       	add	r27, r27
 35e:	11 f4       	brne	.+4      	; 0x364 <__floatsisf+0x36>
 360:	60 ff       	sbrs	r22, 0
 362:	1b c0       	rjmp	.+54     	; 0x39a <__floatsisf+0x6c>
 364:	6f 5f       	subi	r22, 0xFF	; 255
 366:	7f 4f       	sbci	r23, 0xFF	; 255
 368:	8f 4f       	sbci	r24, 0xFF	; 255
 36a:	9f 4f       	sbci	r25, 0xFF	; 255
 36c:	16 c0       	rjmp	.+44     	; 0x39a <__floatsisf+0x6c>
 36e:	88 23       	and	r24, r24
 370:	11 f0       	breq	.+4      	; 0x376 <__floatsisf+0x48>
 372:	96 e9       	ldi	r25, 0x96	; 150
 374:	11 c0       	rjmp	.+34     	; 0x398 <__floatsisf+0x6a>
 376:	77 23       	and	r23, r23
 378:	21 f0       	breq	.+8      	; 0x382 <__floatsisf+0x54>
 37a:	9e e8       	ldi	r25, 0x8E	; 142
 37c:	87 2f       	mov	r24, r23
 37e:	76 2f       	mov	r23, r22
 380:	05 c0       	rjmp	.+10     	; 0x38c <__floatsisf+0x5e>
 382:	66 23       	and	r22, r22
 384:	71 f0       	breq	.+28     	; 0x3a2 <__floatsisf+0x74>
 386:	96 e8       	ldi	r25, 0x86	; 134
 388:	86 2f       	mov	r24, r22
 38a:	70 e0       	ldi	r23, 0x00	; 0
 38c:	60 e0       	ldi	r22, 0x00	; 0
 38e:	2a f0       	brmi	.+10     	; 0x39a <__floatsisf+0x6c>
 390:	9a 95       	dec	r25
 392:	66 0f       	add	r22, r22
 394:	77 1f       	adc	r23, r23
 396:	88 1f       	adc	r24, r24
 398:	da f7       	brpl	.-10     	; 0x390 <__floatsisf+0x62>
 39a:	88 0f       	add	r24, r24
 39c:	96 95       	lsr	r25
 39e:	87 95       	ror	r24
 3a0:	97 f9       	bld	r25, 7
 3a2:	08 95       	ret

000003a4 <__fp_cmp>:
 3a4:	99 0f       	add	r25, r25
 3a6:	00 08       	sbc	r0, r0
 3a8:	55 0f       	add	r21, r21
 3aa:	aa 0b       	sbc	r26, r26
 3ac:	e0 e8       	ldi	r30, 0x80	; 128
 3ae:	fe ef       	ldi	r31, 0xFE	; 254
 3b0:	16 16       	cp	r1, r22
 3b2:	17 06       	cpc	r1, r23
 3b4:	e8 07       	cpc	r30, r24
 3b6:	f9 07       	cpc	r31, r25
 3b8:	c0 f0       	brcs	.+48     	; 0x3ea <__fp_cmp+0x46>
 3ba:	12 16       	cp	r1, r18
 3bc:	13 06       	cpc	r1, r19
 3be:	e4 07       	cpc	r30, r20
 3c0:	f5 07       	cpc	r31, r21
 3c2:	98 f0       	brcs	.+38     	; 0x3ea <__fp_cmp+0x46>
 3c4:	62 1b       	sub	r22, r18
 3c6:	73 0b       	sbc	r23, r19
 3c8:	84 0b       	sbc	r24, r20
 3ca:	95 0b       	sbc	r25, r21
 3cc:	39 f4       	brne	.+14     	; 0x3dc <__fp_cmp+0x38>
 3ce:	0a 26       	eor	r0, r26
 3d0:	61 f0       	breq	.+24     	; 0x3ea <__fp_cmp+0x46>
 3d2:	23 2b       	or	r18, r19
 3d4:	24 2b       	or	r18, r20
 3d6:	25 2b       	or	r18, r21
 3d8:	21 f4       	brne	.+8      	; 0x3e2 <__fp_cmp+0x3e>
 3da:	08 95       	ret
 3dc:	0a 26       	eor	r0, r26
 3de:	09 f4       	brne	.+2      	; 0x3e2 <__fp_cmp+0x3e>
 3e0:	a1 40       	sbci	r26, 0x01	; 1
 3e2:	a6 95       	lsr	r26
 3e4:	8f ef       	ldi	r24, 0xFF	; 255
 3e6:	81 1d       	adc	r24, r1
 3e8:	81 1d       	adc	r24, r1
 3ea:	08 95       	ret

000003ec <__fp_inf>:
 3ec:	97 f9       	bld	r25, 7
 3ee:	9f 67       	ori	r25, 0x7F	; 127
 3f0:	80 e8       	ldi	r24, 0x80	; 128
 3f2:	70 e0       	ldi	r23, 0x00	; 0
 3f4:	60 e0       	ldi	r22, 0x00	; 0
 3f6:	08 95       	ret

000003f8 <__fp_nan>:
 3f8:	9f ef       	ldi	r25, 0xFF	; 255
 3fa:	80 ec       	ldi	r24, 0xC0	; 192
 3fc:	08 95       	ret

000003fe <__fp_pscA>:
 3fe:	00 24       	eor	r0, r0
 400:	0a 94       	dec	r0
 402:	16 16       	cp	r1, r22
 404:	17 06       	cpc	r1, r23
 406:	18 06       	cpc	r1, r24
 408:	09 06       	cpc	r0, r25
 40a:	08 95       	ret

0000040c <__fp_pscB>:
 40c:	00 24       	eor	r0, r0
 40e:	0a 94       	dec	r0
 410:	12 16       	cp	r1, r18
 412:	13 06       	cpc	r1, r19
 414:	14 06       	cpc	r1, r20
 416:	05 06       	cpc	r0, r21
 418:	08 95       	ret

0000041a <__fp_round>:
 41a:	09 2e       	mov	r0, r25
 41c:	03 94       	inc	r0
 41e:	00 0c       	add	r0, r0
 420:	11 f4       	brne	.+4      	; 0x426 <__fp_round+0xc>
 422:	88 23       	and	r24, r24
 424:	52 f0       	brmi	.+20     	; 0x43a <__fp_round+0x20>
 426:	bb 0f       	add	r27, r27
 428:	40 f4       	brcc	.+16     	; 0x43a <__fp_round+0x20>
 42a:	bf 2b       	or	r27, r31
 42c:	11 f4       	brne	.+4      	; 0x432 <__fp_round+0x18>
 42e:	60 ff       	sbrs	r22, 0
 430:	04 c0       	rjmp	.+8      	; 0x43a <__fp_round+0x20>
 432:	6f 5f       	subi	r22, 0xFF	; 255
 434:	7f 4f       	sbci	r23, 0xFF	; 255
 436:	8f 4f       	sbci	r24, 0xFF	; 255
 438:	9f 4f       	sbci	r25, 0xFF	; 255
 43a:	08 95       	ret

0000043c <__fp_split3>:
 43c:	57 fd       	sbrc	r21, 7
 43e:	90 58       	subi	r25, 0x80	; 128
 440:	44 0f       	add	r20, r20
 442:	55 1f       	adc	r21, r21
 444:	59 f0       	breq	.+22     	; 0x45c <__fp_splitA+0x10>
 446:	5f 3f       	cpi	r21, 0xFF	; 255
 448:	71 f0       	breq	.+28     	; 0x466 <__fp_splitA+0x1a>
 44a:	47 95       	ror	r20

0000044c <__fp_splitA>:
 44c:	88 0f       	add	r24, r24
 44e:	97 fb       	bst	r25, 7
 450:	99 1f       	adc	r25, r25
 452:	61 f0       	breq	.+24     	; 0x46c <__fp_splitA+0x20>
 454:	9f 3f       	cpi	r25, 0xFF	; 255
 456:	79 f0       	breq	.+30     	; 0x476 <__fp_splitA+0x2a>
 458:	87 95       	ror	r24
 45a:	08 95       	ret
 45c:	12 16       	cp	r1, r18
 45e:	13 06       	cpc	r1, r19
 460:	14 06       	cpc	r1, r20
 462:	55 1f       	adc	r21, r21
 464:	f2 cf       	rjmp	.-28     	; 0x44a <__fp_split3+0xe>
 466:	46 95       	lsr	r20
 468:	f1 df       	rcall	.-30     	; 0x44c <__fp_splitA>
 46a:	08 c0       	rjmp	.+16     	; 0x47c <__fp_splitA+0x30>
 46c:	16 16       	cp	r1, r22
 46e:	17 06       	cpc	r1, r23
 470:	18 06       	cpc	r1, r24
 472:	99 1f       	adc	r25, r25
 474:	f1 cf       	rjmp	.-30     	; 0x458 <__fp_splitA+0xc>
 476:	86 95       	lsr	r24
 478:	71 05       	cpc	r23, r1
 47a:	61 05       	cpc	r22, r1
 47c:	08 94       	sec
 47e:	08 95       	ret

00000480 <__fp_zero>:
 480:	e8 94       	clt

00000482 <__fp_szero>:
 482:	bb 27       	eor	r27, r27
 484:	66 27       	eor	r22, r22
 486:	77 27       	eor	r23, r23
 488:	cb 01       	movw	r24, r22
 48a:	97 f9       	bld	r25, 7
 48c:	08 95       	ret

0000048e <__gesf2>:
 48e:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <__fp_cmp>
 492:	08 f4       	brcc	.+2      	; 0x496 <__gesf2+0x8>
 494:	8f ef       	ldi	r24, 0xFF	; 255
 496:	08 95       	ret

00000498 <__mulsf3>:
 498:	0e 94 5f 02 	call	0x4be	; 0x4be <__mulsf3x>
 49c:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__fp_round>
 4a0:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__fp_pscA>
 4a4:	38 f0       	brcs	.+14     	; 0x4b4 <__mulsf3+0x1c>
 4a6:	0e 94 06 02 	call	0x40c	; 0x40c <__fp_pscB>
 4aa:	20 f0       	brcs	.+8      	; 0x4b4 <__mulsf3+0x1c>
 4ac:	95 23       	and	r25, r21
 4ae:	11 f0       	breq	.+4      	; 0x4b4 <__mulsf3+0x1c>
 4b0:	0c 94 f6 01 	jmp	0x3ec	; 0x3ec <__fp_inf>
 4b4:	0c 94 fc 01 	jmp	0x3f8	; 0x3f8 <__fp_nan>
 4b8:	11 24       	eor	r1, r1
 4ba:	0c 94 41 02 	jmp	0x482	; 0x482 <__fp_szero>

000004be <__mulsf3x>:
 4be:	0e 94 1e 02 	call	0x43c	; 0x43c <__fp_split3>
 4c2:	70 f3       	brcs	.-36     	; 0x4a0 <__mulsf3+0x8>

000004c4 <__mulsf3_pse>:
 4c4:	95 9f       	mul	r25, r21
 4c6:	c1 f3       	breq	.-16     	; 0x4b8 <__mulsf3+0x20>
 4c8:	95 0f       	add	r25, r21
 4ca:	50 e0       	ldi	r21, 0x00	; 0
 4cc:	55 1f       	adc	r21, r21
 4ce:	62 9f       	mul	r22, r18
 4d0:	f0 01       	movw	r30, r0
 4d2:	72 9f       	mul	r23, r18
 4d4:	bb 27       	eor	r27, r27
 4d6:	f0 0d       	add	r31, r0
 4d8:	b1 1d       	adc	r27, r1
 4da:	63 9f       	mul	r22, r19
 4dc:	aa 27       	eor	r26, r26
 4de:	f0 0d       	add	r31, r0
 4e0:	b1 1d       	adc	r27, r1
 4e2:	aa 1f       	adc	r26, r26
 4e4:	64 9f       	mul	r22, r20
 4e6:	66 27       	eor	r22, r22
 4e8:	b0 0d       	add	r27, r0
 4ea:	a1 1d       	adc	r26, r1
 4ec:	66 1f       	adc	r22, r22
 4ee:	82 9f       	mul	r24, r18
 4f0:	22 27       	eor	r18, r18
 4f2:	b0 0d       	add	r27, r0
 4f4:	a1 1d       	adc	r26, r1
 4f6:	62 1f       	adc	r22, r18
 4f8:	73 9f       	mul	r23, r19
 4fa:	b0 0d       	add	r27, r0
 4fc:	a1 1d       	adc	r26, r1
 4fe:	62 1f       	adc	r22, r18
 500:	83 9f       	mul	r24, r19
 502:	a0 0d       	add	r26, r0
 504:	61 1d       	adc	r22, r1
 506:	22 1f       	adc	r18, r18
 508:	74 9f       	mul	r23, r20
 50a:	33 27       	eor	r19, r19
 50c:	a0 0d       	add	r26, r0
 50e:	61 1d       	adc	r22, r1
 510:	23 1f       	adc	r18, r19
 512:	84 9f       	mul	r24, r20
 514:	60 0d       	add	r22, r0
 516:	21 1d       	adc	r18, r1
 518:	82 2f       	mov	r24, r18
 51a:	76 2f       	mov	r23, r22
 51c:	6a 2f       	mov	r22, r26
 51e:	11 24       	eor	r1, r1
 520:	9f 57       	subi	r25, 0x7F	; 127
 522:	50 40       	sbci	r21, 0x00	; 0
 524:	9a f0       	brmi	.+38     	; 0x54c <__mulsf3_pse+0x88>
 526:	f1 f0       	breq	.+60     	; 0x564 <__mulsf3_pse+0xa0>
 528:	88 23       	and	r24, r24
 52a:	4a f0       	brmi	.+18     	; 0x53e <__mulsf3_pse+0x7a>
 52c:	ee 0f       	add	r30, r30
 52e:	ff 1f       	adc	r31, r31
 530:	bb 1f       	adc	r27, r27
 532:	66 1f       	adc	r22, r22
 534:	77 1f       	adc	r23, r23
 536:	88 1f       	adc	r24, r24
 538:	91 50       	subi	r25, 0x01	; 1
 53a:	50 40       	sbci	r21, 0x00	; 0
 53c:	a9 f7       	brne	.-22     	; 0x528 <__mulsf3_pse+0x64>
 53e:	9e 3f       	cpi	r25, 0xFE	; 254
 540:	51 05       	cpc	r21, r1
 542:	80 f0       	brcs	.+32     	; 0x564 <__mulsf3_pse+0xa0>
 544:	0c 94 f6 01 	jmp	0x3ec	; 0x3ec <__fp_inf>
 548:	0c 94 41 02 	jmp	0x482	; 0x482 <__fp_szero>
 54c:	5f 3f       	cpi	r21, 0xFF	; 255
 54e:	e4 f3       	brlt	.-8      	; 0x548 <__mulsf3_pse+0x84>
 550:	98 3e       	cpi	r25, 0xE8	; 232
 552:	d4 f3       	brlt	.-12     	; 0x548 <__mulsf3_pse+0x84>
 554:	86 95       	lsr	r24
 556:	77 95       	ror	r23
 558:	67 95       	ror	r22
 55a:	b7 95       	ror	r27
 55c:	f7 95       	ror	r31
 55e:	e7 95       	ror	r30
 560:	9f 5f       	subi	r25, 0xFF	; 255
 562:	c1 f7       	brne	.-16     	; 0x554 <__mulsf3_pse+0x90>
 564:	fe 2b       	or	r31, r30
 566:	88 0f       	add	r24, r24
 568:	91 1d       	adc	r25, r1
 56a:	96 95       	lsr	r25
 56c:	87 95       	ror	r24
 56e:	97 f9       	bld	r25, 7
 570:	08 95       	ret

00000572 <_exit>:
 572:	f8 94       	cli

00000574 <__stop_program>:
 574:	ff cf       	rjmp	.-2      	; 0x574 <__stop_program>
