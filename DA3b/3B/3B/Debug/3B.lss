
3B.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  0000066e  000006e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000066e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000006fc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000072c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  0000076c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b19  00000000  00000000  000007b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009cc  00000000  00000000  000012cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003c7  00000000  00000000  00001c99  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000fc  00000000  00000000  00002060  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000482  00000000  00000000  0000215c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002a9  00000000  00000000  000025de  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00002887  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
   8:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
   c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  10:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  14:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  18:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  1c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  20:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  24:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  28:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  2c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  30:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  34:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  38:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  3c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  40:	0c 94 3c 01 	jmp	0x278	; 0x278 <__vector_16>
  44:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  48:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  4c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  50:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  54:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  58:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  5c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  60:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  64:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  68:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  6c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  70:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  74:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  78:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  7c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  80:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  84:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  88:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  8c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  90:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  94:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  98:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  9c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a0:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a4:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a8:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  ac:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  b0:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	ee e6       	ldi	r30, 0x6E	; 110
  c8:	f6 e0       	ldi	r31, 0x06	; 6
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	aa 31       	cpi	r26, 0x1A	; 26
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>
  d6:	0e 94 7b 00 	call	0xf6	; 0xf6 <main>
  da:	0c 94 35 03 	jmp	0x66a	; 0x66a <_exit>

000000de <__bad_interrupt>:
  de:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e2 <usart_init>:
	usart_send((a)+'0');
	usart_send('\r');
}
void usart_init(void)
{
	UCSR0B = (1<<TXEN0); //enable interrupts
  e2:	88 e0       	ldi	r24, 0x08	; 8
  e4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
  e8:	86 e0       	ldi	r24, 0x06	; 6
  ea:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
	UBRR0L = F_CPU/16/BAUD_RATE-1;
  ee:	87 e6       	ldi	r24, 0x67	; 103
  f0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
  f4:	08 95       	ret

000000f6 <main>:
void usart_send(unsigned char ch);
void usart_string(char *data);

int main(void)
{
	usart_init();
  f6:	0e 94 71 00 	call	0xe2	; 0xe2 <usart_init>
	TCCR0A = 0x00; //normal mode set
  fa:	14 bc       	out	0x24, r1	; 36
	TCCR0B = 0x05; //prescaler of 1024
  fc:	85 e0       	ldi	r24, 0x05	; 5
  fe:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = (1<<TOIE0); //timer 0 interrupt enable
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	
	ADMUX = (0<<REFS1)|	//Reference Selection Bits
 106:	84 e4       	ldi	r24, 0x44	; 68
 108:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
			(1<<REFS0)| //AVcc - external cap at AREF
			(0<<ADLAR)| //ADC Left Adjust Result
			(1<<MUX2) | //Analog channel selection bits
			(0<<MUX1) | //ADC4 (PC4 PIN27)
			(0<<MUX0);
	ADCSRA = (1<<ADEN)| //ADC Enable
 10c:	85 e8       	ldi	r24, 0x85	; 133
 10e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
			(0<<ADIE) | //ADC interrupt enable
			(1<<ADPS2)| //ADC prescaler select bit
			(0<<ADPS1)|
			(1<<ADPS0);
	
	usart_init();
 112:	0e 94 71 00 	call	0xe2	; 0xe2 <usart_init>
	sei();
 116:	78 94       	sei
 118:	ff cf       	rjmp	.-2      	; 0x118 <main+0x22>

0000011a <usart_send>:
	UBRR0L = F_CPU/16/BAUD_RATE-1;
}

void usart_send(unsigned char ch)
{
	while (!(UCSR0A & (1<<UDRE0)));
 11a:	e0 ec       	ldi	r30, 0xC0	; 192
 11c:	f0 e0       	ldi	r31, 0x00	; 0
 11e:	90 81       	ld	r25, Z
 120:	95 ff       	sbrs	r25, 5
 122:	fd cf       	rjmp	.-6      	; 0x11e <usart_send+0x4>
	UDR0 = ch;
 124:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 128:	08 95       	ret

0000012a <usart_string>:
}

void usart_string(char *data) {
 12a:	cf 93       	push	r28
 12c:	df 93       	push	r29
	while((*data != '\0'))	{
 12e:	fc 01       	movw	r30, r24
 130:	20 81       	ld	r18, Z
 132:	22 23       	and	r18, r18
 134:	69 f0       	breq	.+26     	; 0x150 <usart_string+0x26>
 136:	dc 01       	movw	r26, r24
 138:	11 96       	adiw	r26, 0x01	; 1
		while(!(UCSR0A & (1<<UDRE0)));
 13a:	e0 ec       	ldi	r30, 0xC0	; 192
 13c:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;
 13e:	c6 ec       	ldi	r28, 0xC6	; 198
 140:	d0 e0       	ldi	r29, 0x00	; 0
	UDR0 = ch;
}

void usart_string(char *data) {
	while((*data != '\0'))	{
		while(!(UCSR0A & (1<<UDRE0)));
 142:	90 81       	ld	r25, Z
 144:	95 ff       	sbrs	r25, 5
 146:	fd cf       	rjmp	.-6      	; 0x142 <usart_string+0x18>
		UDR0 = *data;
 148:	28 83       	st	Y, r18
	while (!(UCSR0A & (1<<UDRE0)));
	UDR0 = ch;
}

void usart_string(char *data) {
	while((*data != '\0'))	{
 14a:	2d 91       	ld	r18, X+
 14c:	21 11       	cpse	r18, r1
 14e:	f9 cf       	rjmp	.-14     	; 0x142 <usart_string+0x18>
		while(!(UCSR0A & (1<<UDRE0)));
		UDR0 = *data;
		data++;
	}
 150:	df 91       	pop	r29
 152:	cf 91       	pop	r28
 154:	08 95       	ret

00000156 <adc_read>:
	adc_read();
	TCNT0 = 0;
	}
	
void adc_read(void)
{
 156:	af 92       	push	r10
 158:	bf 92       	push	r11
 15a:	cf 92       	push	r12
 15c:	df 92       	push	r13
 15e:	ef 92       	push	r14
 160:	ff 92       	push	r15
 162:	0f 93       	push	r16
 164:	1f 93       	push	r17
 166:	cf 93       	push	r28
 168:	df 93       	push	r29
	ADCSRA |= (1<<ADSC); //START CONVERSION
 16a:	ea e7       	ldi	r30, 0x7A	; 122
 16c:	f0 e0       	ldi	r31, 0x00	; 0
 16e:	80 81       	ld	r24, Z
 170:	80 64       	ori	r24, 0x40	; 64
 172:	80 83       	st	Z, r24
	while ((ADCSRA & (1<<ADIF))==0); //wait for conversion to finish
 174:	80 81       	ld	r24, Z
 176:	84 ff       	sbrs	r24, 4
 178:	fd cf       	rjmp	.-6      	; 0x174 <adc_read+0x1e>
		
	ADCSRA |= (1<<ADIF);
 17a:	ea e7       	ldi	r30, 0x7A	; 122
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	80 81       	ld	r24, Z
 180:	80 61       	ori	r24, 0x10	; 16
 182:	80 83       	st	Z, r24
		
	//Celcius read
	int a = ADCL;
 184:	0f 2e       	mov	r0, r31
 186:	f8 e7       	ldi	r31, 0x78	; 120
 188:	cf 2e       	mov	r12, r31
 18a:	d1 2c       	mov	r13, r1
 18c:	f0 2d       	mov	r31, r0
 18e:	f6 01       	movw	r30, r12
 190:	c0 81       	ld	r28, Z
	a = a | (ADCH<<8);
 192:	0f 2e       	mov	r0, r31
 194:	f9 e7       	ldi	r31, 0x79	; 121
 196:	ef 2e       	mov	r14, r31
 198:	f1 2c       	mov	r15, r1
 19a:	f0 2d       	mov	r31, r0
 19c:	f7 01       	movw	r30, r14
 19e:	80 81       	ld	r24, Z
 1a0:	d0 e0       	ldi	r29, 0x00	; 0
 1a2:	d8 2b       	or	r29, r24
	usart_string("Centigrade: ");
 1a4:	80 e0       	ldi	r24, 0x00	; 0
 1a6:	91 e0       	ldi	r25, 0x01	; 1
 1a8:	0e 94 95 00 	call	0x12a	; 0x12a <usart_string>
	usart_send((a/100)+'0');
 1ac:	04 e6       	ldi	r16, 0x64	; 100
 1ae:	10 e0       	ldi	r17, 0x00	; 0
 1b0:	ce 01       	movw	r24, r28
 1b2:	b8 01       	movw	r22, r16
 1b4:	0e 94 0d 03 	call	0x61a	; 0x61a <__divmodhi4>
 1b8:	5c 01       	movw	r10, r24
 1ba:	80 e3       	ldi	r24, 0x30	; 48
 1bc:	86 0f       	add	r24, r22
 1be:	0e 94 8d 00 	call	0x11a	; 0x11a <usart_send>
	a = a % 100;
	usart_send((a/10)+'0');
 1c2:	ca e0       	ldi	r28, 0x0A	; 10
 1c4:	d0 e0       	ldi	r29, 0x00	; 0
 1c6:	c5 01       	movw	r24, r10
 1c8:	be 01       	movw	r22, r28
 1ca:	0e 94 0d 03 	call	0x61a	; 0x61a <__divmodhi4>
 1ce:	b8 2e       	mov	r11, r24
 1d0:	80 e3       	ldi	r24, 0x30	; 48
 1d2:	86 0f       	add	r24, r22
 1d4:	0e 94 8d 00 	call	0x11a	; 0x11a <usart_send>
	a = a % 10;
	usart_send((a)+'0');
 1d8:	80 e3       	ldi	r24, 0x30	; 48
 1da:	8b 0d       	add	r24, r11
 1dc:	0e 94 8d 00 	call	0x11a	; 0x11a <usart_send>
	usart_send('\r');
 1e0:	8d e0       	ldi	r24, 0x0D	; 13
 1e2:	0e 94 8d 00 	call	0x11a	; 0x11a <usart_send>
	
	//Farenheit read
	a = ADCL;
 1e6:	f6 01       	movw	r30, r12
 1e8:	60 81       	ld	r22, Z
	a = a | (ADCH<<8);
 1ea:	f7 01       	movw	r30, r14
 1ec:	80 81       	ld	r24, Z
	a = (a/1024.0)*5000/10;
 1ee:	70 e0       	ldi	r23, 0x00	; 0
 1f0:	78 2b       	or	r23, r24
 1f2:	07 2e       	mov	r0, r23
 1f4:	00 0c       	add	r0, r0
 1f6:	88 0b       	sbc	r24, r24
 1f8:	99 0b       	sbc	r25, r25
 1fa:	0e 94 14 02 	call	0x428	; 0x428 <__floatsisf>
 1fe:	20 e0       	ldi	r18, 0x00	; 0
 200:	30 e0       	ldi	r19, 0x00	; 0
 202:	40 e8       	ldi	r20, 0x80	; 128
 204:	5a e3       	ldi	r21, 0x3A	; 58
 206:	0e 94 a0 02 	call	0x540	; 0x540 <__mulsf3>
 20a:	20 e0       	ldi	r18, 0x00	; 0
 20c:	30 e4       	ldi	r19, 0x40	; 64
 20e:	4c e9       	ldi	r20, 0x9C	; 156
 210:	55 e4       	ldi	r21, 0x45	; 69
 212:	0e 94 a0 02 	call	0x540	; 0x540 <__mulsf3>
 216:	20 e0       	ldi	r18, 0x00	; 0
 218:	30 e0       	ldi	r19, 0x00	; 0
 21a:	40 e2       	ldi	r20, 0x20	; 32
 21c:	51 e4       	ldi	r21, 0x41	; 65
 21e:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <__divsf3>
 222:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <__fixsfsi>
 226:	7b 01       	movw	r14, r22
	usart_string("Farenheit: ");
 228:	8d e0       	ldi	r24, 0x0D	; 13
 22a:	91 e0       	ldi	r25, 0x01	; 1
 22c:	0e 94 95 00 	call	0x12a	; 0x12a <usart_string>
	usart_send((a/100)+'0');
 230:	c7 01       	movw	r24, r14
 232:	b8 01       	movw	r22, r16
 234:	0e 94 0d 03 	call	0x61a	; 0x61a <__divmodhi4>
 238:	8c 01       	movw	r16, r24
 23a:	80 e3       	ldi	r24, 0x30	; 48
 23c:	86 0f       	add	r24, r22
 23e:	0e 94 8d 00 	call	0x11a	; 0x11a <usart_send>
	a = a % 100;
	usart_send((a/10)+'0');
 242:	c8 01       	movw	r24, r16
 244:	be 01       	movw	r22, r28
 246:	0e 94 0d 03 	call	0x61a	; 0x61a <__divmodhi4>
 24a:	c8 2f       	mov	r28, r24
 24c:	80 e3       	ldi	r24, 0x30	; 48
 24e:	86 0f       	add	r24, r22
 250:	0e 94 8d 00 	call	0x11a	; 0x11a <usart_send>
	a = a % 10;
	usart_send((a)+'0');
 254:	80 e3       	ldi	r24, 0x30	; 48
 256:	8c 0f       	add	r24, r28
 258:	0e 94 8d 00 	call	0x11a	; 0x11a <usart_send>
	usart_send('\r');
 25c:	8d e0       	ldi	r24, 0x0D	; 13
 25e:	0e 94 8d 00 	call	0x11a	; 0x11a <usart_send>
}
 262:	df 91       	pop	r29
 264:	cf 91       	pop	r28
 266:	1f 91       	pop	r17
 268:	0f 91       	pop	r16
 26a:	ff 90       	pop	r15
 26c:	ef 90       	pop	r14
 26e:	df 90       	pop	r13
 270:	cf 90       	pop	r12
 272:	bf 90       	pop	r11
 274:	af 90       	pop	r10
 276:	08 95       	ret

00000278 <__vector_16>:
	
    while (1);
	return 0;
}

ISR(TIMER0_OVF_vect) {
 278:	1f 92       	push	r1
 27a:	0f 92       	push	r0
 27c:	0f b6       	in	r0, 0x3f	; 63
 27e:	0f 92       	push	r0
 280:	11 24       	eor	r1, r1
 282:	2f 93       	push	r18
 284:	3f 93       	push	r19
 286:	4f 93       	push	r20
 288:	5f 93       	push	r21
 28a:	6f 93       	push	r22
 28c:	7f 93       	push	r23
 28e:	8f 93       	push	r24
 290:	9f 93       	push	r25
 292:	af 93       	push	r26
 294:	bf 93       	push	r27
 296:	ef 93       	push	r30
 298:	ff 93       	push	r31
 29a:	2f e1       	ldi	r18, 0x1F	; 31
 29c:	30 e0       	ldi	r19, 0x00	; 0
	for (int i = 0; i <= 30; i++) {
		while (TCNT0 != 255) {}
 29e:	86 b5       	in	r24, 0x26	; 38
 2a0:	8f 3f       	cpi	r24, 0xFF	; 255
 2a2:	e9 f7       	brne	.-6      	; 0x29e <__vector_16+0x26>
		TCNT0 = 0;
 2a4:	16 bc       	out	0x26, r1	; 38
 2a6:	21 50       	subi	r18, 0x01	; 1
 2a8:	31 09       	sbc	r19, r1
    while (1);
	return 0;
}

ISR(TIMER0_OVF_vect) {
	for (int i = 0; i <= 30; i++) {
 2aa:	c9 f7       	brne	.-14     	; 0x29e <__vector_16+0x26>
		while (TCNT0 != 255) {}
		TCNT0 = 0;
	}
	adc_read();
 2ac:	0e 94 ab 00 	call	0x156	; 0x156 <adc_read>
	TCNT0 = 0;
 2b0:	16 bc       	out	0x26, r1	; 38
	}
 2b2:	ff 91       	pop	r31
 2b4:	ef 91       	pop	r30
 2b6:	bf 91       	pop	r27
 2b8:	af 91       	pop	r26
 2ba:	9f 91       	pop	r25
 2bc:	8f 91       	pop	r24
 2be:	7f 91       	pop	r23
 2c0:	6f 91       	pop	r22
 2c2:	5f 91       	pop	r21
 2c4:	4f 91       	pop	r20
 2c6:	3f 91       	pop	r19
 2c8:	2f 91       	pop	r18
 2ca:	0f 90       	pop	r0
 2cc:	0f be       	out	0x3f, r0	; 63
 2ce:	0f 90       	pop	r0
 2d0:	1f 90       	pop	r1
 2d2:	18 95       	reti

000002d4 <__divsf3>:
 2d4:	0e 94 7e 01 	call	0x2fc	; 0x2fc <__divsf3x>
 2d8:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <__fp_round>
 2dc:	0e 94 5f 02 	call	0x4be	; 0x4be <__fp_pscB>
 2e0:	58 f0       	brcs	.+22     	; 0x2f8 <__divsf3+0x24>
 2e2:	0e 94 58 02 	call	0x4b0	; 0x4b0 <__fp_pscA>
 2e6:	40 f0       	brcs	.+16     	; 0x2f8 <__divsf3+0x24>
 2e8:	29 f4       	brne	.+10     	; 0x2f4 <__divsf3+0x20>
 2ea:	5f 3f       	cpi	r21, 0xFF	; 255
 2ec:	29 f0       	breq	.+10     	; 0x2f8 <__divsf3+0x24>
 2ee:	0c 94 4f 02 	jmp	0x49e	; 0x49e <__fp_inf>
 2f2:	51 11       	cpse	r21, r1
 2f4:	0c 94 9a 02 	jmp	0x534	; 0x534 <__fp_szero>
 2f8:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <__fp_nan>

000002fc <__divsf3x>:
 2fc:	0e 94 77 02 	call	0x4ee	; 0x4ee <__fp_split3>
 300:	68 f3       	brcs	.-38     	; 0x2dc <__divsf3+0x8>

00000302 <__divsf3_pse>:
 302:	99 23       	and	r25, r25
 304:	b1 f3       	breq	.-20     	; 0x2f2 <__divsf3+0x1e>
 306:	55 23       	and	r21, r21
 308:	91 f3       	breq	.-28     	; 0x2ee <__divsf3+0x1a>
 30a:	95 1b       	sub	r25, r21
 30c:	55 0b       	sbc	r21, r21
 30e:	bb 27       	eor	r27, r27
 310:	aa 27       	eor	r26, r26
 312:	62 17       	cp	r22, r18
 314:	73 07       	cpc	r23, r19
 316:	84 07       	cpc	r24, r20
 318:	38 f0       	brcs	.+14     	; 0x328 <__divsf3_pse+0x26>
 31a:	9f 5f       	subi	r25, 0xFF	; 255
 31c:	5f 4f       	sbci	r21, 0xFF	; 255
 31e:	22 0f       	add	r18, r18
 320:	33 1f       	adc	r19, r19
 322:	44 1f       	adc	r20, r20
 324:	aa 1f       	adc	r26, r26
 326:	a9 f3       	breq	.-22     	; 0x312 <__divsf3_pse+0x10>
 328:	35 d0       	rcall	.+106    	; 0x394 <__divsf3_pse+0x92>
 32a:	0e 2e       	mov	r0, r30
 32c:	3a f0       	brmi	.+14     	; 0x33c <__divsf3_pse+0x3a>
 32e:	e0 e8       	ldi	r30, 0x80	; 128
 330:	32 d0       	rcall	.+100    	; 0x396 <__divsf3_pse+0x94>
 332:	91 50       	subi	r25, 0x01	; 1
 334:	50 40       	sbci	r21, 0x00	; 0
 336:	e6 95       	lsr	r30
 338:	00 1c       	adc	r0, r0
 33a:	ca f7       	brpl	.-14     	; 0x32e <__divsf3_pse+0x2c>
 33c:	2b d0       	rcall	.+86     	; 0x394 <__divsf3_pse+0x92>
 33e:	fe 2f       	mov	r31, r30
 340:	29 d0       	rcall	.+82     	; 0x394 <__divsf3_pse+0x92>
 342:	66 0f       	add	r22, r22
 344:	77 1f       	adc	r23, r23
 346:	88 1f       	adc	r24, r24
 348:	bb 1f       	adc	r27, r27
 34a:	26 17       	cp	r18, r22
 34c:	37 07       	cpc	r19, r23
 34e:	48 07       	cpc	r20, r24
 350:	ab 07       	cpc	r26, r27
 352:	b0 e8       	ldi	r27, 0x80	; 128
 354:	09 f0       	breq	.+2      	; 0x358 <__divsf3_pse+0x56>
 356:	bb 0b       	sbc	r27, r27
 358:	80 2d       	mov	r24, r0
 35a:	bf 01       	movw	r22, r30
 35c:	ff 27       	eor	r31, r31
 35e:	93 58       	subi	r25, 0x83	; 131
 360:	5f 4f       	sbci	r21, 0xFF	; 255
 362:	3a f0       	brmi	.+14     	; 0x372 <__divsf3_pse+0x70>
 364:	9e 3f       	cpi	r25, 0xFE	; 254
 366:	51 05       	cpc	r21, r1
 368:	78 f0       	brcs	.+30     	; 0x388 <__divsf3_pse+0x86>
 36a:	0c 94 4f 02 	jmp	0x49e	; 0x49e <__fp_inf>
 36e:	0c 94 9a 02 	jmp	0x534	; 0x534 <__fp_szero>
 372:	5f 3f       	cpi	r21, 0xFF	; 255
 374:	e4 f3       	brlt	.-8      	; 0x36e <__divsf3_pse+0x6c>
 376:	98 3e       	cpi	r25, 0xE8	; 232
 378:	d4 f3       	brlt	.-12     	; 0x36e <__divsf3_pse+0x6c>
 37a:	86 95       	lsr	r24
 37c:	77 95       	ror	r23
 37e:	67 95       	ror	r22
 380:	b7 95       	ror	r27
 382:	f7 95       	ror	r31
 384:	9f 5f       	subi	r25, 0xFF	; 255
 386:	c9 f7       	brne	.-14     	; 0x37a <__divsf3_pse+0x78>
 388:	88 0f       	add	r24, r24
 38a:	91 1d       	adc	r25, r1
 38c:	96 95       	lsr	r25
 38e:	87 95       	ror	r24
 390:	97 f9       	bld	r25, 7
 392:	08 95       	ret
 394:	e1 e0       	ldi	r30, 0x01	; 1
 396:	66 0f       	add	r22, r22
 398:	77 1f       	adc	r23, r23
 39a:	88 1f       	adc	r24, r24
 39c:	bb 1f       	adc	r27, r27
 39e:	62 17       	cp	r22, r18
 3a0:	73 07       	cpc	r23, r19
 3a2:	84 07       	cpc	r24, r20
 3a4:	ba 07       	cpc	r27, r26
 3a6:	20 f0       	brcs	.+8      	; 0x3b0 <__divsf3_pse+0xae>
 3a8:	62 1b       	sub	r22, r18
 3aa:	73 0b       	sbc	r23, r19
 3ac:	84 0b       	sbc	r24, r20
 3ae:	ba 0b       	sbc	r27, r26
 3b0:	ee 1f       	adc	r30, r30
 3b2:	88 f7       	brcc	.-30     	; 0x396 <__divsf3_pse+0x94>
 3b4:	e0 95       	com	r30
 3b6:	08 95       	ret

000003b8 <__fixsfsi>:
 3b8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__fixunssfsi>
 3bc:	68 94       	set
 3be:	b1 11       	cpse	r27, r1
 3c0:	0c 94 9a 02 	jmp	0x534	; 0x534 <__fp_szero>
 3c4:	08 95       	ret

000003c6 <__fixunssfsi>:
 3c6:	0e 94 7f 02 	call	0x4fe	; 0x4fe <__fp_splitA>
 3ca:	88 f0       	brcs	.+34     	; 0x3ee <__fixunssfsi+0x28>
 3cc:	9f 57       	subi	r25, 0x7F	; 127
 3ce:	98 f0       	brcs	.+38     	; 0x3f6 <__fixunssfsi+0x30>
 3d0:	b9 2f       	mov	r27, r25
 3d2:	99 27       	eor	r25, r25
 3d4:	b7 51       	subi	r27, 0x17	; 23
 3d6:	b0 f0       	brcs	.+44     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3d8:	e1 f0       	breq	.+56     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3da:	66 0f       	add	r22, r22
 3dc:	77 1f       	adc	r23, r23
 3de:	88 1f       	adc	r24, r24
 3e0:	99 1f       	adc	r25, r25
 3e2:	1a f0       	brmi	.+6      	; 0x3ea <__fixunssfsi+0x24>
 3e4:	ba 95       	dec	r27
 3e6:	c9 f7       	brne	.-14     	; 0x3da <__fixunssfsi+0x14>
 3e8:	14 c0       	rjmp	.+40     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3ea:	b1 30       	cpi	r27, 0x01	; 1
 3ec:	91 f0       	breq	.+36     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3ee:	0e 94 99 02 	call	0x532	; 0x532 <__fp_zero>
 3f2:	b1 e0       	ldi	r27, 0x01	; 1
 3f4:	08 95       	ret
 3f6:	0c 94 99 02 	jmp	0x532	; 0x532 <__fp_zero>
 3fa:	67 2f       	mov	r22, r23
 3fc:	78 2f       	mov	r23, r24
 3fe:	88 27       	eor	r24, r24
 400:	b8 5f       	subi	r27, 0xF8	; 248
 402:	39 f0       	breq	.+14     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 404:	b9 3f       	cpi	r27, 0xF9	; 249
 406:	cc f3       	brlt	.-14     	; 0x3fa <__fixunssfsi+0x34>
 408:	86 95       	lsr	r24
 40a:	77 95       	ror	r23
 40c:	67 95       	ror	r22
 40e:	b3 95       	inc	r27
 410:	d9 f7       	brne	.-10     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 412:	3e f4       	brtc	.+14     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 414:	90 95       	com	r25
 416:	80 95       	com	r24
 418:	70 95       	com	r23
 41a:	61 95       	neg	r22
 41c:	7f 4f       	sbci	r23, 0xFF	; 255
 41e:	8f 4f       	sbci	r24, 0xFF	; 255
 420:	9f 4f       	sbci	r25, 0xFF	; 255
 422:	08 95       	ret

00000424 <__floatunsisf>:
 424:	e8 94       	clt
 426:	09 c0       	rjmp	.+18     	; 0x43a <__floatsisf+0x12>

00000428 <__floatsisf>:
 428:	97 fb       	bst	r25, 7
 42a:	3e f4       	brtc	.+14     	; 0x43a <__floatsisf+0x12>
 42c:	90 95       	com	r25
 42e:	80 95       	com	r24
 430:	70 95       	com	r23
 432:	61 95       	neg	r22
 434:	7f 4f       	sbci	r23, 0xFF	; 255
 436:	8f 4f       	sbci	r24, 0xFF	; 255
 438:	9f 4f       	sbci	r25, 0xFF	; 255
 43a:	99 23       	and	r25, r25
 43c:	a9 f0       	breq	.+42     	; 0x468 <__floatsisf+0x40>
 43e:	f9 2f       	mov	r31, r25
 440:	96 e9       	ldi	r25, 0x96	; 150
 442:	bb 27       	eor	r27, r27
 444:	93 95       	inc	r25
 446:	f6 95       	lsr	r31
 448:	87 95       	ror	r24
 44a:	77 95       	ror	r23
 44c:	67 95       	ror	r22
 44e:	b7 95       	ror	r27
 450:	f1 11       	cpse	r31, r1
 452:	f8 cf       	rjmp	.-16     	; 0x444 <__floatsisf+0x1c>
 454:	fa f4       	brpl	.+62     	; 0x494 <__floatsisf+0x6c>
 456:	bb 0f       	add	r27, r27
 458:	11 f4       	brne	.+4      	; 0x45e <__floatsisf+0x36>
 45a:	60 ff       	sbrs	r22, 0
 45c:	1b c0       	rjmp	.+54     	; 0x494 <__floatsisf+0x6c>
 45e:	6f 5f       	subi	r22, 0xFF	; 255
 460:	7f 4f       	sbci	r23, 0xFF	; 255
 462:	8f 4f       	sbci	r24, 0xFF	; 255
 464:	9f 4f       	sbci	r25, 0xFF	; 255
 466:	16 c0       	rjmp	.+44     	; 0x494 <__floatsisf+0x6c>
 468:	88 23       	and	r24, r24
 46a:	11 f0       	breq	.+4      	; 0x470 <__floatsisf+0x48>
 46c:	96 e9       	ldi	r25, 0x96	; 150
 46e:	11 c0       	rjmp	.+34     	; 0x492 <__floatsisf+0x6a>
 470:	77 23       	and	r23, r23
 472:	21 f0       	breq	.+8      	; 0x47c <__floatsisf+0x54>
 474:	9e e8       	ldi	r25, 0x8E	; 142
 476:	87 2f       	mov	r24, r23
 478:	76 2f       	mov	r23, r22
 47a:	05 c0       	rjmp	.+10     	; 0x486 <__floatsisf+0x5e>
 47c:	66 23       	and	r22, r22
 47e:	71 f0       	breq	.+28     	; 0x49c <__floatsisf+0x74>
 480:	96 e8       	ldi	r25, 0x86	; 134
 482:	86 2f       	mov	r24, r22
 484:	70 e0       	ldi	r23, 0x00	; 0
 486:	60 e0       	ldi	r22, 0x00	; 0
 488:	2a f0       	brmi	.+10     	; 0x494 <__floatsisf+0x6c>
 48a:	9a 95       	dec	r25
 48c:	66 0f       	add	r22, r22
 48e:	77 1f       	adc	r23, r23
 490:	88 1f       	adc	r24, r24
 492:	da f7       	brpl	.-10     	; 0x48a <__floatsisf+0x62>
 494:	88 0f       	add	r24, r24
 496:	96 95       	lsr	r25
 498:	87 95       	ror	r24
 49a:	97 f9       	bld	r25, 7
 49c:	08 95       	ret

0000049e <__fp_inf>:
 49e:	97 f9       	bld	r25, 7
 4a0:	9f 67       	ori	r25, 0x7F	; 127
 4a2:	80 e8       	ldi	r24, 0x80	; 128
 4a4:	70 e0       	ldi	r23, 0x00	; 0
 4a6:	60 e0       	ldi	r22, 0x00	; 0
 4a8:	08 95       	ret

000004aa <__fp_nan>:
 4aa:	9f ef       	ldi	r25, 0xFF	; 255
 4ac:	80 ec       	ldi	r24, 0xC0	; 192
 4ae:	08 95       	ret

000004b0 <__fp_pscA>:
 4b0:	00 24       	eor	r0, r0
 4b2:	0a 94       	dec	r0
 4b4:	16 16       	cp	r1, r22
 4b6:	17 06       	cpc	r1, r23
 4b8:	18 06       	cpc	r1, r24
 4ba:	09 06       	cpc	r0, r25
 4bc:	08 95       	ret

000004be <__fp_pscB>:
 4be:	00 24       	eor	r0, r0
 4c0:	0a 94       	dec	r0
 4c2:	12 16       	cp	r1, r18
 4c4:	13 06       	cpc	r1, r19
 4c6:	14 06       	cpc	r1, r20
 4c8:	05 06       	cpc	r0, r21
 4ca:	08 95       	ret

000004cc <__fp_round>:
 4cc:	09 2e       	mov	r0, r25
 4ce:	03 94       	inc	r0
 4d0:	00 0c       	add	r0, r0
 4d2:	11 f4       	brne	.+4      	; 0x4d8 <__fp_round+0xc>
 4d4:	88 23       	and	r24, r24
 4d6:	52 f0       	brmi	.+20     	; 0x4ec <__fp_round+0x20>
 4d8:	bb 0f       	add	r27, r27
 4da:	40 f4       	brcc	.+16     	; 0x4ec <__fp_round+0x20>
 4dc:	bf 2b       	or	r27, r31
 4de:	11 f4       	brne	.+4      	; 0x4e4 <__fp_round+0x18>
 4e0:	60 ff       	sbrs	r22, 0
 4e2:	04 c0       	rjmp	.+8      	; 0x4ec <__fp_round+0x20>
 4e4:	6f 5f       	subi	r22, 0xFF	; 255
 4e6:	7f 4f       	sbci	r23, 0xFF	; 255
 4e8:	8f 4f       	sbci	r24, 0xFF	; 255
 4ea:	9f 4f       	sbci	r25, 0xFF	; 255
 4ec:	08 95       	ret

000004ee <__fp_split3>:
 4ee:	57 fd       	sbrc	r21, 7
 4f0:	90 58       	subi	r25, 0x80	; 128
 4f2:	44 0f       	add	r20, r20
 4f4:	55 1f       	adc	r21, r21
 4f6:	59 f0       	breq	.+22     	; 0x50e <__fp_splitA+0x10>
 4f8:	5f 3f       	cpi	r21, 0xFF	; 255
 4fa:	71 f0       	breq	.+28     	; 0x518 <__fp_splitA+0x1a>
 4fc:	47 95       	ror	r20

000004fe <__fp_splitA>:
 4fe:	88 0f       	add	r24, r24
 500:	97 fb       	bst	r25, 7
 502:	99 1f       	adc	r25, r25
 504:	61 f0       	breq	.+24     	; 0x51e <__fp_splitA+0x20>
 506:	9f 3f       	cpi	r25, 0xFF	; 255
 508:	79 f0       	breq	.+30     	; 0x528 <__fp_splitA+0x2a>
 50a:	87 95       	ror	r24
 50c:	08 95       	ret
 50e:	12 16       	cp	r1, r18
 510:	13 06       	cpc	r1, r19
 512:	14 06       	cpc	r1, r20
 514:	55 1f       	adc	r21, r21
 516:	f2 cf       	rjmp	.-28     	; 0x4fc <__fp_split3+0xe>
 518:	46 95       	lsr	r20
 51a:	f1 df       	rcall	.-30     	; 0x4fe <__fp_splitA>
 51c:	08 c0       	rjmp	.+16     	; 0x52e <__fp_splitA+0x30>
 51e:	16 16       	cp	r1, r22
 520:	17 06       	cpc	r1, r23
 522:	18 06       	cpc	r1, r24
 524:	99 1f       	adc	r25, r25
 526:	f1 cf       	rjmp	.-30     	; 0x50a <__fp_splitA+0xc>
 528:	86 95       	lsr	r24
 52a:	71 05       	cpc	r23, r1
 52c:	61 05       	cpc	r22, r1
 52e:	08 94       	sec
 530:	08 95       	ret

00000532 <__fp_zero>:
 532:	e8 94       	clt

00000534 <__fp_szero>:
 534:	bb 27       	eor	r27, r27
 536:	66 27       	eor	r22, r22
 538:	77 27       	eor	r23, r23
 53a:	cb 01       	movw	r24, r22
 53c:	97 f9       	bld	r25, 7
 53e:	08 95       	ret

00000540 <__mulsf3>:
 540:	0e 94 b3 02 	call	0x566	; 0x566 <__mulsf3x>
 544:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <__fp_round>
 548:	0e 94 58 02 	call	0x4b0	; 0x4b0 <__fp_pscA>
 54c:	38 f0       	brcs	.+14     	; 0x55c <__mulsf3+0x1c>
 54e:	0e 94 5f 02 	call	0x4be	; 0x4be <__fp_pscB>
 552:	20 f0       	brcs	.+8      	; 0x55c <__mulsf3+0x1c>
 554:	95 23       	and	r25, r21
 556:	11 f0       	breq	.+4      	; 0x55c <__mulsf3+0x1c>
 558:	0c 94 4f 02 	jmp	0x49e	; 0x49e <__fp_inf>
 55c:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <__fp_nan>
 560:	11 24       	eor	r1, r1
 562:	0c 94 9a 02 	jmp	0x534	; 0x534 <__fp_szero>

00000566 <__mulsf3x>:
 566:	0e 94 77 02 	call	0x4ee	; 0x4ee <__fp_split3>
 56a:	70 f3       	brcs	.-36     	; 0x548 <__mulsf3+0x8>

0000056c <__mulsf3_pse>:
 56c:	95 9f       	mul	r25, r21
 56e:	c1 f3       	breq	.-16     	; 0x560 <__mulsf3+0x20>
 570:	95 0f       	add	r25, r21
 572:	50 e0       	ldi	r21, 0x00	; 0
 574:	55 1f       	adc	r21, r21
 576:	62 9f       	mul	r22, r18
 578:	f0 01       	movw	r30, r0
 57a:	72 9f       	mul	r23, r18
 57c:	bb 27       	eor	r27, r27
 57e:	f0 0d       	add	r31, r0
 580:	b1 1d       	adc	r27, r1
 582:	63 9f       	mul	r22, r19
 584:	aa 27       	eor	r26, r26
 586:	f0 0d       	add	r31, r0
 588:	b1 1d       	adc	r27, r1
 58a:	aa 1f       	adc	r26, r26
 58c:	64 9f       	mul	r22, r20
 58e:	66 27       	eor	r22, r22
 590:	b0 0d       	add	r27, r0
 592:	a1 1d       	adc	r26, r1
 594:	66 1f       	adc	r22, r22
 596:	82 9f       	mul	r24, r18
 598:	22 27       	eor	r18, r18
 59a:	b0 0d       	add	r27, r0
 59c:	a1 1d       	adc	r26, r1
 59e:	62 1f       	adc	r22, r18
 5a0:	73 9f       	mul	r23, r19
 5a2:	b0 0d       	add	r27, r0
 5a4:	a1 1d       	adc	r26, r1
 5a6:	62 1f       	adc	r22, r18
 5a8:	83 9f       	mul	r24, r19
 5aa:	a0 0d       	add	r26, r0
 5ac:	61 1d       	adc	r22, r1
 5ae:	22 1f       	adc	r18, r18
 5b0:	74 9f       	mul	r23, r20
 5b2:	33 27       	eor	r19, r19
 5b4:	a0 0d       	add	r26, r0
 5b6:	61 1d       	adc	r22, r1
 5b8:	23 1f       	adc	r18, r19
 5ba:	84 9f       	mul	r24, r20
 5bc:	60 0d       	add	r22, r0
 5be:	21 1d       	adc	r18, r1
 5c0:	82 2f       	mov	r24, r18
 5c2:	76 2f       	mov	r23, r22
 5c4:	6a 2f       	mov	r22, r26
 5c6:	11 24       	eor	r1, r1
 5c8:	9f 57       	subi	r25, 0x7F	; 127
 5ca:	50 40       	sbci	r21, 0x00	; 0
 5cc:	9a f0       	brmi	.+38     	; 0x5f4 <__mulsf3_pse+0x88>
 5ce:	f1 f0       	breq	.+60     	; 0x60c <__mulsf3_pse+0xa0>
 5d0:	88 23       	and	r24, r24
 5d2:	4a f0       	brmi	.+18     	; 0x5e6 <__mulsf3_pse+0x7a>
 5d4:	ee 0f       	add	r30, r30
 5d6:	ff 1f       	adc	r31, r31
 5d8:	bb 1f       	adc	r27, r27
 5da:	66 1f       	adc	r22, r22
 5dc:	77 1f       	adc	r23, r23
 5de:	88 1f       	adc	r24, r24
 5e0:	91 50       	subi	r25, 0x01	; 1
 5e2:	50 40       	sbci	r21, 0x00	; 0
 5e4:	a9 f7       	brne	.-22     	; 0x5d0 <__mulsf3_pse+0x64>
 5e6:	9e 3f       	cpi	r25, 0xFE	; 254
 5e8:	51 05       	cpc	r21, r1
 5ea:	80 f0       	brcs	.+32     	; 0x60c <__mulsf3_pse+0xa0>
 5ec:	0c 94 4f 02 	jmp	0x49e	; 0x49e <__fp_inf>
 5f0:	0c 94 9a 02 	jmp	0x534	; 0x534 <__fp_szero>
 5f4:	5f 3f       	cpi	r21, 0xFF	; 255
 5f6:	e4 f3       	brlt	.-8      	; 0x5f0 <__mulsf3_pse+0x84>
 5f8:	98 3e       	cpi	r25, 0xE8	; 232
 5fa:	d4 f3       	brlt	.-12     	; 0x5f0 <__mulsf3_pse+0x84>
 5fc:	86 95       	lsr	r24
 5fe:	77 95       	ror	r23
 600:	67 95       	ror	r22
 602:	b7 95       	ror	r27
 604:	f7 95       	ror	r31
 606:	e7 95       	ror	r30
 608:	9f 5f       	subi	r25, 0xFF	; 255
 60a:	c1 f7       	brne	.-16     	; 0x5fc <__mulsf3_pse+0x90>
 60c:	fe 2b       	or	r31, r30
 60e:	88 0f       	add	r24, r24
 610:	91 1d       	adc	r25, r1
 612:	96 95       	lsr	r25
 614:	87 95       	ror	r24
 616:	97 f9       	bld	r25, 7
 618:	08 95       	ret

0000061a <__divmodhi4>:
 61a:	97 fb       	bst	r25, 7
 61c:	07 2e       	mov	r0, r23
 61e:	16 f4       	brtc	.+4      	; 0x624 <__divmodhi4+0xa>
 620:	00 94       	com	r0
 622:	07 d0       	rcall	.+14     	; 0x632 <__divmodhi4_neg1>
 624:	77 fd       	sbrc	r23, 7
 626:	09 d0       	rcall	.+18     	; 0x63a <__divmodhi4_neg2>
 628:	0e 94 21 03 	call	0x642	; 0x642 <__udivmodhi4>
 62c:	07 fc       	sbrc	r0, 7
 62e:	05 d0       	rcall	.+10     	; 0x63a <__divmodhi4_neg2>
 630:	3e f4       	brtc	.+14     	; 0x640 <__divmodhi4_exit>

00000632 <__divmodhi4_neg1>:
 632:	90 95       	com	r25
 634:	81 95       	neg	r24
 636:	9f 4f       	sbci	r25, 0xFF	; 255
 638:	08 95       	ret

0000063a <__divmodhi4_neg2>:
 63a:	70 95       	com	r23
 63c:	61 95       	neg	r22
 63e:	7f 4f       	sbci	r23, 0xFF	; 255

00000640 <__divmodhi4_exit>:
 640:	08 95       	ret

00000642 <__udivmodhi4>:
 642:	aa 1b       	sub	r26, r26
 644:	bb 1b       	sub	r27, r27
 646:	51 e1       	ldi	r21, 0x11	; 17
 648:	07 c0       	rjmp	.+14     	; 0x658 <__udivmodhi4_ep>

0000064a <__udivmodhi4_loop>:
 64a:	aa 1f       	adc	r26, r26
 64c:	bb 1f       	adc	r27, r27
 64e:	a6 17       	cp	r26, r22
 650:	b7 07       	cpc	r27, r23
 652:	10 f0       	brcs	.+4      	; 0x658 <__udivmodhi4_ep>
 654:	a6 1b       	sub	r26, r22
 656:	b7 0b       	sbc	r27, r23

00000658 <__udivmodhi4_ep>:
 658:	88 1f       	adc	r24, r24
 65a:	99 1f       	adc	r25, r25
 65c:	5a 95       	dec	r21
 65e:	a9 f7       	brne	.-22     	; 0x64a <__udivmodhi4_loop>
 660:	80 95       	com	r24
 662:	90 95       	com	r25
 664:	bc 01       	movw	r22, r24
 666:	cd 01       	movw	r24, r26
 668:	08 95       	ret

0000066a <_exit>:
 66a:	f8 94       	cli

0000066c <__stop_program>:
 66c:	ff cf       	rjmp	.-2      	; 0x66c <__stop_program>
